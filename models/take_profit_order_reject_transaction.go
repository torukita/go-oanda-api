// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TakeProfitOrderRejectTransaction A TakeProfitOrderRejectTransaction represents the rejection of the creation of a TakeProfit Order.
// swagger:model TakeProfitOrderRejectTransaction
type TakeProfitOrderRejectTransaction struct {

	// The ID of the Account the Transaction was created for.
	AccountID string `json:"accountID,omitempty"`

	// The ID of the "batch" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.
	BatchID string `json:"batchID,omitempty"`

	// client extensions
	ClientExtensions *ClientExtensions `json:"clientExtensions,omitempty"`

	// The client ID of the Trade to be closed when the price threshold is breached.
	ClientTradeID string `json:"clientTradeID,omitempty"`

	// The date/time when the TakeProfit Order will be cancelled if its timeInForce is "GTD".
	GtdTime string `json:"gtdTime,omitempty"`

	// The Transaction's Identifier.
	ID string `json:"id,omitempty"`

	// The ID of the Order that this Order was intended to replace (only provided if this Order was intended to replace an existing Order).
	IntendedReplacesOrderID string `json:"intendedReplacesOrderID,omitempty"`

	// The ID of the OrderFill Transaction that caused this Order to be created (only provided if this Order was created automatically when another Order was filled).
	OrderFillTransactionID string `json:"orderFillTransactionID,omitempty"`

	// The price threshold specified for the TakeProfit Order. The associated Trade will be closed by a market price that is equal to or better than this threshold.
	Price string `json:"price,omitempty"`

	// The reason that the Take Profit Order was initiated
	Reason string `json:"reason,omitempty"`

	// The reason that the Reject Transaction was created
	RejectReason string `json:"rejectReason,omitempty"`

	// The Request ID of the request which generated the transaction.
	RequestID string `json:"requestID,omitempty"`

	// The date/time when the Transaction was created.
	Time string `json:"time,omitempty"`

	// The time-in-force requested for the TakeProfit Order. Restricted to "GTC", "GFD" and "GTD" for TakeProfit Orders.
	TimeInForce string `json:"timeInForce,omitempty"`

	// The ID of the Trade to close when the price threshold is breached.
	TradeID string `json:"tradeID,omitempty"`

	// Specification of what component of a price should be used for comparison when determining if the Order should be filled.
	TriggerCondition string `json:"triggerCondition,omitempty"`

	// The Type of the Transaction. Always set to "TAKE_PROFIT_ORDER_REJECT" in a TakeProfitOrderRejectTransaction.
	Type string `json:"type,omitempty"`

	// The ID of the user that initiated the creation of the Transaction.
	UserID int64 `json:"userID,omitempty"`
}

// Validate validates this take profit order reject transaction
func (m *TakeProfitOrderRejectTransaction) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClientExtensions(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateReason(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateRejectReason(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTimeInForce(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTriggerCondition(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TakeProfitOrderRejectTransaction) validateClientExtensions(formats strfmt.Registry) error {

	if swag.IsZero(m.ClientExtensions) { // not required
		return nil
	}

	if m.ClientExtensions != nil {

		if err := m.ClientExtensions.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("clientExtensions")
			}
			return err
		}
	}

	return nil
}

var takeProfitOrderRejectTransactionTypeReasonPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["CLIENT_ORDER","REPLACEMENT","ON_FILL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		takeProfitOrderRejectTransactionTypeReasonPropEnum = append(takeProfitOrderRejectTransactionTypeReasonPropEnum, v)
	}
}

const (
	// TakeProfitOrderRejectTransactionReasonCLIENTORDER captures enum value "CLIENT_ORDER"
	TakeProfitOrderRejectTransactionReasonCLIENTORDER string = "CLIENT_ORDER"
	// TakeProfitOrderRejectTransactionReasonREPLACEMENT captures enum value "REPLACEMENT"
	TakeProfitOrderRejectTransactionReasonREPLACEMENT string = "REPLACEMENT"
	// TakeProfitOrderRejectTransactionReasonONFILL captures enum value "ON_FILL"
	TakeProfitOrderRejectTransactionReasonONFILL string = "ON_FILL"
)

// prop value enum
func (m *TakeProfitOrderRejectTransaction) validateReasonEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, takeProfitOrderRejectTransactionTypeReasonPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *TakeProfitOrderRejectTransaction) validateReason(formats strfmt.Registry) error {

	if swag.IsZero(m.Reason) { // not required
		return nil
	}

	// value enum
	if err := m.validateReasonEnum("reason", "body", m.Reason); err != nil {
		return err
	}

	return nil
}

var takeProfitOrderRejectTransactionTypeRejectReasonPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["INTERNAL_SERVER_ERROR","INSTRUMENT_PRICE_UNKNOWN","ACCOUNT_NOT_ACTIVE","ACCOUNT_LOCKED","ACCOUNT_ORDER_CREATION_LOCKED","ACCOUNT_CONFIGURATION_LOCKED","ACCOUNT_DEPOSIT_LOCKED","ACCOUNT_WITHDRAWAL_LOCKED","ACCOUNT_ORDER_CANCEL_LOCKED","INSTRUMENT_NOT_TRADEABLE","PENDING_ORDERS_ALLOWED_EXCEEDED","ORDER_ID_UNSPECIFIED","ORDER_DOESNT_EXIST","ORDER_IDENTIFIER_INCONSISTENCY","TRADE_ID_UNSPECIFIED","TRADE_DOESNT_EXIST","TRADE_IDENTIFIER_INCONSISTENCY","INSTRUMENT_MISSING","INSTRUMENT_UNKNOWN","UNITS_MISSING","UNITS_INVALID","UNITS_PRECISION_EXCEEDED","UNITS_LIMIT_EXCEEDED","UNITS_MIMIMUM_NOT_MET","PRICE_MISSING","PRICE_INVALID","PRICE_PRECISION_EXCEEDED","PRICE_DISTANCE_MISSING","PRICE_DISTANCE_INVALID","PRICE_DISTANCE_PRECISION_EXCEEDED","PRICE_DISTANCE_MAXIMUM_EXCEEDED","PRICE_DISTANCE_MINIMUM_NOT_MET","TIME_IN_FORCE_MISSING","TIME_IN_FORCE_INVALID","TIME_IN_FORCE_GTD_TIMESTAMP_MISSING","TIME_IN_FORCE_GTD_TIMESTAMP_IN_PAST","PRICE_BOUND_INVALID","PRICE_BOUND_PRECISION_EXCEEDED","ORDERS_ON_FILL_DUPLICATE_CLIENT_ORDER_IDS","TRADE_ON_FILL_CLIENT_EXTENSIONS_NOT_SUPPORTED","CLIENT_ORDER_ID_INVALID","CLIENT_ORDER_ID_ALREADY_EXISTS","CLIENT_ORDER_TAG_INVALID","CLIENT_ORDER_COMMENT_INVALID","CLIENT_TRADE_ID_INVALID","CLIENT_TRADE_ID_ALREADY_EXISTS","CLIENT_TRADE_TAG_INVALID","CLIENT_TRADE_COMMENT_INVALID","ORDER_FILL_POSITION_ACTION_MISSING","ORDER_FILL_POSITION_ACTION_INVALID","TRIGGER_CONDITION_MISSING","TRIGGER_CONDITION_INVALID","ORDER_PARTIAL_FILL_OPTION_MISSING","ORDER_PARTIAL_FILL_OPTION_INVALID","INVALID_REISSUE_IMMEDIATE_PARTIAL_FILL","TAKE_PROFIT_ORDER_ALREADY_EXISTS","TAKE_PROFIT_ON_FILL_PRICE_MISSING","TAKE_PROFIT_ON_FILL_PRICE_INVALID","TAKE_PROFIT_ON_FILL_PRICE_PRECISION_EXCEEDED","TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_MISSING","TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_INVALID","TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_MISSING","TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_IN_PAST","TAKE_PROFIT_ON_FILL_CLIENT_ORDER_ID_INVALID","TAKE_PROFIT_ON_FILL_CLIENT_ORDER_TAG_INVALID","TAKE_PROFIT_ON_FILL_CLIENT_ORDER_COMMENT_INVALID","TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_MISSING","TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_INVALID","STOP_LOSS_ORDER_ALREADY_EXISTS","STOP_LOSS_ON_FILL_PRICE_MISSING","STOP_LOSS_ON_FILL_PRICE_INVALID","STOP_LOSS_ON_FILL_PRICE_PRECISION_EXCEEDED","STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING","STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID","STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING","STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST","STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID","STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID","STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID","STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING","STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID","TRAILING_STOP_LOSS_ORDER_ALREADY_EXISTS","TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MISSING","TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_INVALID","TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_PRECISION_EXCEEDED","TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED","TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MINIMUM_NOT_MET","TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING","TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID","TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING","TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST","TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID","TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID","TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID","TRAILING_STOP_LOSS_ORDERS_NOT_SUPPORTED","TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING","TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID","CLOSE_TRADE_TYPE_MISSING","CLOSE_TRADE_PARTIAL_UNITS_MISSING","CLOSE_TRADE_UNITS_EXCEED_TRADE_SIZE","CLOSEOUT_POSITION_DOESNT_EXIST","CLOSEOUT_POSITION_INCOMPLETE_SPECIFICATION","CLOSEOUT_POSITION_UNITS_EXCEED_POSITION_SIZE","CLOSEOUT_POSITION_REJECT","CLOSEOUT_POSITION_PARTIAL_UNITS_MISSING","MARKUP_GROUP_ID_INVALID","POSITION_AGGREGATION_MODE_INVALID","ADMIN_CONFIGURE_DATA_MISSING","MARGIN_RATE_INVALID","MARGIN_RATE_WOULD_TRIGGER_CLOSEOUT","ALIAS_INVALID","CLIENT_CONFIGURE_DATA_MISSING","MARGIN_RATE_WOULD_TRIGGER_MARGIN_CALL","AMOUNT_INVALID","INSUFFICIENT_FUNDS","AMOUNT_MISSING","FUNDING_REASON_MISSING","CLIENT_EXTENSIONS_DATA_MISSING","REPLACING_ORDER_INVALID","REPLACING_TRADE_ID_INVALID"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		takeProfitOrderRejectTransactionTypeRejectReasonPropEnum = append(takeProfitOrderRejectTransactionTypeRejectReasonPropEnum, v)
	}
}

const (
	// TakeProfitOrderRejectTransactionRejectReasonINTERNALSERVERERROR captures enum value "INTERNAL_SERVER_ERROR"
	TakeProfitOrderRejectTransactionRejectReasonINTERNALSERVERERROR string = "INTERNAL_SERVER_ERROR"
	// TakeProfitOrderRejectTransactionRejectReasonINSTRUMENTPRICEUNKNOWN captures enum value "INSTRUMENT_PRICE_UNKNOWN"
	TakeProfitOrderRejectTransactionRejectReasonINSTRUMENTPRICEUNKNOWN string = "INSTRUMENT_PRICE_UNKNOWN"
	// TakeProfitOrderRejectTransactionRejectReasonACCOUNTNOTACTIVE captures enum value "ACCOUNT_NOT_ACTIVE"
	TakeProfitOrderRejectTransactionRejectReasonACCOUNTNOTACTIVE string = "ACCOUNT_NOT_ACTIVE"
	// TakeProfitOrderRejectTransactionRejectReasonACCOUNTLOCKED captures enum value "ACCOUNT_LOCKED"
	TakeProfitOrderRejectTransactionRejectReasonACCOUNTLOCKED string = "ACCOUNT_LOCKED"
	// TakeProfitOrderRejectTransactionRejectReasonACCOUNTORDERCREATIONLOCKED captures enum value "ACCOUNT_ORDER_CREATION_LOCKED"
	TakeProfitOrderRejectTransactionRejectReasonACCOUNTORDERCREATIONLOCKED string = "ACCOUNT_ORDER_CREATION_LOCKED"
	// TakeProfitOrderRejectTransactionRejectReasonACCOUNTCONFIGURATIONLOCKED captures enum value "ACCOUNT_CONFIGURATION_LOCKED"
	TakeProfitOrderRejectTransactionRejectReasonACCOUNTCONFIGURATIONLOCKED string = "ACCOUNT_CONFIGURATION_LOCKED"
	// TakeProfitOrderRejectTransactionRejectReasonACCOUNTDEPOSITLOCKED captures enum value "ACCOUNT_DEPOSIT_LOCKED"
	TakeProfitOrderRejectTransactionRejectReasonACCOUNTDEPOSITLOCKED string = "ACCOUNT_DEPOSIT_LOCKED"
	// TakeProfitOrderRejectTransactionRejectReasonACCOUNTWITHDRAWALLOCKED captures enum value "ACCOUNT_WITHDRAWAL_LOCKED"
	TakeProfitOrderRejectTransactionRejectReasonACCOUNTWITHDRAWALLOCKED string = "ACCOUNT_WITHDRAWAL_LOCKED"
	// TakeProfitOrderRejectTransactionRejectReasonACCOUNTORDERCANCELLOCKED captures enum value "ACCOUNT_ORDER_CANCEL_LOCKED"
	TakeProfitOrderRejectTransactionRejectReasonACCOUNTORDERCANCELLOCKED string = "ACCOUNT_ORDER_CANCEL_LOCKED"
	// TakeProfitOrderRejectTransactionRejectReasonINSTRUMENTNOTTRADEABLE captures enum value "INSTRUMENT_NOT_TRADEABLE"
	TakeProfitOrderRejectTransactionRejectReasonINSTRUMENTNOTTRADEABLE string = "INSTRUMENT_NOT_TRADEABLE"
	// TakeProfitOrderRejectTransactionRejectReasonPENDINGORDERSALLOWEDEXCEEDED captures enum value "PENDING_ORDERS_ALLOWED_EXCEEDED"
	TakeProfitOrderRejectTransactionRejectReasonPENDINGORDERSALLOWEDEXCEEDED string = "PENDING_ORDERS_ALLOWED_EXCEEDED"
	// TakeProfitOrderRejectTransactionRejectReasonORDERIDUNSPECIFIED captures enum value "ORDER_ID_UNSPECIFIED"
	TakeProfitOrderRejectTransactionRejectReasonORDERIDUNSPECIFIED string = "ORDER_ID_UNSPECIFIED"
	// TakeProfitOrderRejectTransactionRejectReasonORDERDOESNTEXIST captures enum value "ORDER_DOESNT_EXIST"
	TakeProfitOrderRejectTransactionRejectReasonORDERDOESNTEXIST string = "ORDER_DOESNT_EXIST"
	// TakeProfitOrderRejectTransactionRejectReasonORDERIDENTIFIERINCONSISTENCY captures enum value "ORDER_IDENTIFIER_INCONSISTENCY"
	TakeProfitOrderRejectTransactionRejectReasonORDERIDENTIFIERINCONSISTENCY string = "ORDER_IDENTIFIER_INCONSISTENCY"
	// TakeProfitOrderRejectTransactionRejectReasonTRADEIDUNSPECIFIED captures enum value "TRADE_ID_UNSPECIFIED"
	TakeProfitOrderRejectTransactionRejectReasonTRADEIDUNSPECIFIED string = "TRADE_ID_UNSPECIFIED"
	// TakeProfitOrderRejectTransactionRejectReasonTRADEDOESNTEXIST captures enum value "TRADE_DOESNT_EXIST"
	TakeProfitOrderRejectTransactionRejectReasonTRADEDOESNTEXIST string = "TRADE_DOESNT_EXIST"
	// TakeProfitOrderRejectTransactionRejectReasonTRADEIDENTIFIERINCONSISTENCY captures enum value "TRADE_IDENTIFIER_INCONSISTENCY"
	TakeProfitOrderRejectTransactionRejectReasonTRADEIDENTIFIERINCONSISTENCY string = "TRADE_IDENTIFIER_INCONSISTENCY"
	// TakeProfitOrderRejectTransactionRejectReasonINSTRUMENTMISSING captures enum value "INSTRUMENT_MISSING"
	TakeProfitOrderRejectTransactionRejectReasonINSTRUMENTMISSING string = "INSTRUMENT_MISSING"
	// TakeProfitOrderRejectTransactionRejectReasonINSTRUMENTUNKNOWN captures enum value "INSTRUMENT_UNKNOWN"
	TakeProfitOrderRejectTransactionRejectReasonINSTRUMENTUNKNOWN string = "INSTRUMENT_UNKNOWN"
	// TakeProfitOrderRejectTransactionRejectReasonUNITSMISSING captures enum value "UNITS_MISSING"
	TakeProfitOrderRejectTransactionRejectReasonUNITSMISSING string = "UNITS_MISSING"
	// TakeProfitOrderRejectTransactionRejectReasonUNITSINVALID captures enum value "UNITS_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonUNITSINVALID string = "UNITS_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonUNITSPRECISIONEXCEEDED captures enum value "UNITS_PRECISION_EXCEEDED"
	TakeProfitOrderRejectTransactionRejectReasonUNITSPRECISIONEXCEEDED string = "UNITS_PRECISION_EXCEEDED"
	// TakeProfitOrderRejectTransactionRejectReasonUNITSLIMITEXCEEDED captures enum value "UNITS_LIMIT_EXCEEDED"
	TakeProfitOrderRejectTransactionRejectReasonUNITSLIMITEXCEEDED string = "UNITS_LIMIT_EXCEEDED"
	// TakeProfitOrderRejectTransactionRejectReasonUNITSMIMIMUMNOTMET captures enum value "UNITS_MIMIMUM_NOT_MET"
	TakeProfitOrderRejectTransactionRejectReasonUNITSMIMIMUMNOTMET string = "UNITS_MIMIMUM_NOT_MET"
	// TakeProfitOrderRejectTransactionRejectReasonPRICEMISSING captures enum value "PRICE_MISSING"
	TakeProfitOrderRejectTransactionRejectReasonPRICEMISSING string = "PRICE_MISSING"
	// TakeProfitOrderRejectTransactionRejectReasonPRICEINVALID captures enum value "PRICE_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonPRICEINVALID string = "PRICE_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonPRICEPRECISIONEXCEEDED captures enum value "PRICE_PRECISION_EXCEEDED"
	TakeProfitOrderRejectTransactionRejectReasonPRICEPRECISIONEXCEEDED string = "PRICE_PRECISION_EXCEEDED"
	// TakeProfitOrderRejectTransactionRejectReasonPRICEDISTANCEMISSING captures enum value "PRICE_DISTANCE_MISSING"
	TakeProfitOrderRejectTransactionRejectReasonPRICEDISTANCEMISSING string = "PRICE_DISTANCE_MISSING"
	// TakeProfitOrderRejectTransactionRejectReasonPRICEDISTANCEINVALID captures enum value "PRICE_DISTANCE_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonPRICEDISTANCEINVALID string = "PRICE_DISTANCE_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonPRICEDISTANCEPRECISIONEXCEEDED captures enum value "PRICE_DISTANCE_PRECISION_EXCEEDED"
	TakeProfitOrderRejectTransactionRejectReasonPRICEDISTANCEPRECISIONEXCEEDED string = "PRICE_DISTANCE_PRECISION_EXCEEDED"
	// TakeProfitOrderRejectTransactionRejectReasonPRICEDISTANCEMAXIMUMEXCEEDED captures enum value "PRICE_DISTANCE_MAXIMUM_EXCEEDED"
	TakeProfitOrderRejectTransactionRejectReasonPRICEDISTANCEMAXIMUMEXCEEDED string = "PRICE_DISTANCE_MAXIMUM_EXCEEDED"
	// TakeProfitOrderRejectTransactionRejectReasonPRICEDISTANCEMINIMUMNOTMET captures enum value "PRICE_DISTANCE_MINIMUM_NOT_MET"
	TakeProfitOrderRejectTransactionRejectReasonPRICEDISTANCEMINIMUMNOTMET string = "PRICE_DISTANCE_MINIMUM_NOT_MET"
	// TakeProfitOrderRejectTransactionRejectReasonTIMEINFORCEMISSING captures enum value "TIME_IN_FORCE_MISSING"
	TakeProfitOrderRejectTransactionRejectReasonTIMEINFORCEMISSING string = "TIME_IN_FORCE_MISSING"
	// TakeProfitOrderRejectTransactionRejectReasonTIMEINFORCEINVALID captures enum value "TIME_IN_FORCE_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonTIMEINFORCEINVALID string = "TIME_IN_FORCE_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonTIMEINFORCEGTDTIMESTAMPMISSING captures enum value "TIME_IN_FORCE_GTD_TIMESTAMP_MISSING"
	TakeProfitOrderRejectTransactionRejectReasonTIMEINFORCEGTDTIMESTAMPMISSING string = "TIME_IN_FORCE_GTD_TIMESTAMP_MISSING"
	// TakeProfitOrderRejectTransactionRejectReasonTIMEINFORCEGTDTIMESTAMPINPAST captures enum value "TIME_IN_FORCE_GTD_TIMESTAMP_IN_PAST"
	TakeProfitOrderRejectTransactionRejectReasonTIMEINFORCEGTDTIMESTAMPINPAST string = "TIME_IN_FORCE_GTD_TIMESTAMP_IN_PAST"
	// TakeProfitOrderRejectTransactionRejectReasonPRICEBOUNDINVALID captures enum value "PRICE_BOUND_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonPRICEBOUNDINVALID string = "PRICE_BOUND_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonPRICEBOUNDPRECISIONEXCEEDED captures enum value "PRICE_BOUND_PRECISION_EXCEEDED"
	TakeProfitOrderRejectTransactionRejectReasonPRICEBOUNDPRECISIONEXCEEDED string = "PRICE_BOUND_PRECISION_EXCEEDED"
	// TakeProfitOrderRejectTransactionRejectReasonORDERSONFILLDUPLICATECLIENTORDERIDS captures enum value "ORDERS_ON_FILL_DUPLICATE_CLIENT_ORDER_IDS"
	TakeProfitOrderRejectTransactionRejectReasonORDERSONFILLDUPLICATECLIENTORDERIDS string = "ORDERS_ON_FILL_DUPLICATE_CLIENT_ORDER_IDS"
	// TakeProfitOrderRejectTransactionRejectReasonTRADEONFILLCLIENTEXTENSIONSNOTSUPPORTED captures enum value "TRADE_ON_FILL_CLIENT_EXTENSIONS_NOT_SUPPORTED"
	TakeProfitOrderRejectTransactionRejectReasonTRADEONFILLCLIENTEXTENSIONSNOTSUPPORTED string = "TRADE_ON_FILL_CLIENT_EXTENSIONS_NOT_SUPPORTED"
	// TakeProfitOrderRejectTransactionRejectReasonCLIENTORDERIDINVALID captures enum value "CLIENT_ORDER_ID_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonCLIENTORDERIDINVALID string = "CLIENT_ORDER_ID_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonCLIENTORDERIDALREADYEXISTS captures enum value "CLIENT_ORDER_ID_ALREADY_EXISTS"
	TakeProfitOrderRejectTransactionRejectReasonCLIENTORDERIDALREADYEXISTS string = "CLIENT_ORDER_ID_ALREADY_EXISTS"
	// TakeProfitOrderRejectTransactionRejectReasonCLIENTORDERTAGINVALID captures enum value "CLIENT_ORDER_TAG_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonCLIENTORDERTAGINVALID string = "CLIENT_ORDER_TAG_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonCLIENTORDERCOMMENTINVALID captures enum value "CLIENT_ORDER_COMMENT_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonCLIENTORDERCOMMENTINVALID string = "CLIENT_ORDER_COMMENT_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonCLIENTTRADEIDINVALID captures enum value "CLIENT_TRADE_ID_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonCLIENTTRADEIDINVALID string = "CLIENT_TRADE_ID_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonCLIENTTRADEIDALREADYEXISTS captures enum value "CLIENT_TRADE_ID_ALREADY_EXISTS"
	TakeProfitOrderRejectTransactionRejectReasonCLIENTTRADEIDALREADYEXISTS string = "CLIENT_TRADE_ID_ALREADY_EXISTS"
	// TakeProfitOrderRejectTransactionRejectReasonCLIENTTRADETAGINVALID captures enum value "CLIENT_TRADE_TAG_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonCLIENTTRADETAGINVALID string = "CLIENT_TRADE_TAG_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonCLIENTTRADECOMMENTINVALID captures enum value "CLIENT_TRADE_COMMENT_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonCLIENTTRADECOMMENTINVALID string = "CLIENT_TRADE_COMMENT_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonORDERFILLPOSITIONACTIONMISSING captures enum value "ORDER_FILL_POSITION_ACTION_MISSING"
	TakeProfitOrderRejectTransactionRejectReasonORDERFILLPOSITIONACTIONMISSING string = "ORDER_FILL_POSITION_ACTION_MISSING"
	// TakeProfitOrderRejectTransactionRejectReasonORDERFILLPOSITIONACTIONINVALID captures enum value "ORDER_FILL_POSITION_ACTION_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonORDERFILLPOSITIONACTIONINVALID string = "ORDER_FILL_POSITION_ACTION_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonTRIGGERCONDITIONMISSING captures enum value "TRIGGER_CONDITION_MISSING"
	TakeProfitOrderRejectTransactionRejectReasonTRIGGERCONDITIONMISSING string = "TRIGGER_CONDITION_MISSING"
	// TakeProfitOrderRejectTransactionRejectReasonTRIGGERCONDITIONINVALID captures enum value "TRIGGER_CONDITION_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonTRIGGERCONDITIONINVALID string = "TRIGGER_CONDITION_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonORDERPARTIALFILLOPTIONMISSING captures enum value "ORDER_PARTIAL_FILL_OPTION_MISSING"
	TakeProfitOrderRejectTransactionRejectReasonORDERPARTIALFILLOPTIONMISSING string = "ORDER_PARTIAL_FILL_OPTION_MISSING"
	// TakeProfitOrderRejectTransactionRejectReasonORDERPARTIALFILLOPTIONINVALID captures enum value "ORDER_PARTIAL_FILL_OPTION_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonORDERPARTIALFILLOPTIONINVALID string = "ORDER_PARTIAL_FILL_OPTION_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonINVALIDREISSUEIMMEDIATEPARTIALFILL captures enum value "INVALID_REISSUE_IMMEDIATE_PARTIAL_FILL"
	TakeProfitOrderRejectTransactionRejectReasonINVALIDREISSUEIMMEDIATEPARTIALFILL string = "INVALID_REISSUE_IMMEDIATE_PARTIAL_FILL"
	// TakeProfitOrderRejectTransactionRejectReasonTAKEPROFITORDERALREADYEXISTS captures enum value "TAKE_PROFIT_ORDER_ALREADY_EXISTS"
	TakeProfitOrderRejectTransactionRejectReasonTAKEPROFITORDERALREADYEXISTS string = "TAKE_PROFIT_ORDER_ALREADY_EXISTS"
	// TakeProfitOrderRejectTransactionRejectReasonTAKEPROFITONFILLPRICEMISSING captures enum value "TAKE_PROFIT_ON_FILL_PRICE_MISSING"
	TakeProfitOrderRejectTransactionRejectReasonTAKEPROFITONFILLPRICEMISSING string = "TAKE_PROFIT_ON_FILL_PRICE_MISSING"
	// TakeProfitOrderRejectTransactionRejectReasonTAKEPROFITONFILLPRICEINVALID captures enum value "TAKE_PROFIT_ON_FILL_PRICE_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonTAKEPROFITONFILLPRICEINVALID string = "TAKE_PROFIT_ON_FILL_PRICE_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonTAKEPROFITONFILLPRICEPRECISIONEXCEEDED captures enum value "TAKE_PROFIT_ON_FILL_PRICE_PRECISION_EXCEEDED"
	TakeProfitOrderRejectTransactionRejectReasonTAKEPROFITONFILLPRICEPRECISIONEXCEEDED string = "TAKE_PROFIT_ON_FILL_PRICE_PRECISION_EXCEEDED"
	// TakeProfitOrderRejectTransactionRejectReasonTAKEPROFITONFILLTIMEINFORCEMISSING captures enum value "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_MISSING"
	TakeProfitOrderRejectTransactionRejectReasonTAKEPROFITONFILLTIMEINFORCEMISSING string = "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_MISSING"
	// TakeProfitOrderRejectTransactionRejectReasonTAKEPROFITONFILLTIMEINFORCEINVALID captures enum value "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonTAKEPROFITONFILLTIMEINFORCEINVALID string = "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonTAKEPROFITONFILLGTDTIMESTAMPMISSING captures enum value "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_MISSING"
	TakeProfitOrderRejectTransactionRejectReasonTAKEPROFITONFILLGTDTIMESTAMPMISSING string = "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_MISSING"
	// TakeProfitOrderRejectTransactionRejectReasonTAKEPROFITONFILLGTDTIMESTAMPINPAST captures enum value "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_IN_PAST"
	TakeProfitOrderRejectTransactionRejectReasonTAKEPROFITONFILLGTDTIMESTAMPINPAST string = "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_IN_PAST"
	// TakeProfitOrderRejectTransactionRejectReasonTAKEPROFITONFILLCLIENTORDERIDINVALID captures enum value "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_ID_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonTAKEPROFITONFILLCLIENTORDERIDINVALID string = "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_ID_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonTAKEPROFITONFILLCLIENTORDERTAGINVALID captures enum value "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_TAG_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonTAKEPROFITONFILLCLIENTORDERTAGINVALID string = "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_TAG_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonTAKEPROFITONFILLCLIENTORDERCOMMENTINVALID captures enum value "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_COMMENT_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonTAKEPROFITONFILLCLIENTORDERCOMMENTINVALID string = "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_COMMENT_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonTAKEPROFITONFILLTRIGGERCONDITIONMISSING captures enum value "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_MISSING"
	TakeProfitOrderRejectTransactionRejectReasonTAKEPROFITONFILLTRIGGERCONDITIONMISSING string = "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_MISSING"
	// TakeProfitOrderRejectTransactionRejectReasonTAKEPROFITONFILLTRIGGERCONDITIONINVALID captures enum value "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonTAKEPROFITONFILLTRIGGERCONDITIONINVALID string = "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonSTOPLOSSORDERALREADYEXISTS captures enum value "STOP_LOSS_ORDER_ALREADY_EXISTS"
	TakeProfitOrderRejectTransactionRejectReasonSTOPLOSSORDERALREADYEXISTS string = "STOP_LOSS_ORDER_ALREADY_EXISTS"
	// TakeProfitOrderRejectTransactionRejectReasonSTOPLOSSONFILLPRICEMISSING captures enum value "STOP_LOSS_ON_FILL_PRICE_MISSING"
	TakeProfitOrderRejectTransactionRejectReasonSTOPLOSSONFILLPRICEMISSING string = "STOP_LOSS_ON_FILL_PRICE_MISSING"
	// TakeProfitOrderRejectTransactionRejectReasonSTOPLOSSONFILLPRICEINVALID captures enum value "STOP_LOSS_ON_FILL_PRICE_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonSTOPLOSSONFILLPRICEINVALID string = "STOP_LOSS_ON_FILL_PRICE_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonSTOPLOSSONFILLPRICEPRECISIONEXCEEDED captures enum value "STOP_LOSS_ON_FILL_PRICE_PRECISION_EXCEEDED"
	TakeProfitOrderRejectTransactionRejectReasonSTOPLOSSONFILLPRICEPRECISIONEXCEEDED string = "STOP_LOSS_ON_FILL_PRICE_PRECISION_EXCEEDED"
	// TakeProfitOrderRejectTransactionRejectReasonSTOPLOSSONFILLTIMEINFORCEMISSING captures enum value "STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING"
	TakeProfitOrderRejectTransactionRejectReasonSTOPLOSSONFILLTIMEINFORCEMISSING string = "STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING"
	// TakeProfitOrderRejectTransactionRejectReasonSTOPLOSSONFILLTIMEINFORCEINVALID captures enum value "STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonSTOPLOSSONFILLTIMEINFORCEINVALID string = "STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonSTOPLOSSONFILLGTDTIMESTAMPMISSING captures enum value "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING"
	TakeProfitOrderRejectTransactionRejectReasonSTOPLOSSONFILLGTDTIMESTAMPMISSING string = "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING"
	// TakeProfitOrderRejectTransactionRejectReasonSTOPLOSSONFILLGTDTIMESTAMPINPAST captures enum value "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST"
	TakeProfitOrderRejectTransactionRejectReasonSTOPLOSSONFILLGTDTIMESTAMPINPAST string = "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST"
	// TakeProfitOrderRejectTransactionRejectReasonSTOPLOSSONFILLCLIENTORDERIDINVALID captures enum value "STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonSTOPLOSSONFILLCLIENTORDERIDINVALID string = "STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonSTOPLOSSONFILLCLIENTORDERTAGINVALID captures enum value "STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonSTOPLOSSONFILLCLIENTORDERTAGINVALID string = "STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonSTOPLOSSONFILLCLIENTORDERCOMMENTINVALID captures enum value "STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonSTOPLOSSONFILLCLIENTORDERCOMMENTINVALID string = "STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonSTOPLOSSONFILLTRIGGERCONDITIONMISSING captures enum value "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING"
	TakeProfitOrderRejectTransactionRejectReasonSTOPLOSSONFILLTRIGGERCONDITIONMISSING string = "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING"
	// TakeProfitOrderRejectTransactionRejectReasonSTOPLOSSONFILLTRIGGERCONDITIONINVALID captures enum value "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonSTOPLOSSONFILLTRIGGERCONDITIONINVALID string = "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSORDERALREADYEXISTS captures enum value "TRAILING_STOP_LOSS_ORDER_ALREADY_EXISTS"
	TakeProfitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSORDERALREADYEXISTS string = "TRAILING_STOP_LOSS_ORDER_ALREADY_EXISTS"
	// TakeProfitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLPRICEDISTANCEMISSING captures enum value "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MISSING"
	TakeProfitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLPRICEDISTANCEMISSING string = "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MISSING"
	// TakeProfitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLPRICEDISTANCEINVALID captures enum value "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLPRICEDISTANCEINVALID string = "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLPRICEDISTANCEPRECISIONEXCEEDED captures enum value "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_PRECISION_EXCEEDED"
	TakeProfitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLPRICEDISTANCEPRECISIONEXCEEDED string = "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_PRECISION_EXCEEDED"
	// TakeProfitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLPRICEDISTANCEMAXIMUMEXCEEDED captures enum value "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED"
	TakeProfitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLPRICEDISTANCEMAXIMUMEXCEEDED string = "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED"
	// TakeProfitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLPRICEDISTANCEMINIMUMNOTMET captures enum value "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MINIMUM_NOT_MET"
	TakeProfitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLPRICEDISTANCEMINIMUMNOTMET string = "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MINIMUM_NOT_MET"
	// TakeProfitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLTIMEINFORCEMISSING captures enum value "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING"
	TakeProfitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLTIMEINFORCEMISSING string = "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING"
	// TakeProfitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLTIMEINFORCEINVALID captures enum value "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLTIMEINFORCEINVALID string = "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLGTDTIMESTAMPMISSING captures enum value "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING"
	TakeProfitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLGTDTIMESTAMPMISSING string = "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING"
	// TakeProfitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLGTDTIMESTAMPINPAST captures enum value "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST"
	TakeProfitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLGTDTIMESTAMPINPAST string = "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST"
	// TakeProfitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLCLIENTORDERIDINVALID captures enum value "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLCLIENTORDERIDINVALID string = "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLCLIENTORDERTAGINVALID captures enum value "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLCLIENTORDERTAGINVALID string = "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLCLIENTORDERCOMMENTINVALID captures enum value "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLCLIENTORDERCOMMENTINVALID string = "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSORDERSNOTSUPPORTED captures enum value "TRAILING_STOP_LOSS_ORDERS_NOT_SUPPORTED"
	TakeProfitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSORDERSNOTSUPPORTED string = "TRAILING_STOP_LOSS_ORDERS_NOT_SUPPORTED"
	// TakeProfitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLTRIGGERCONDITIONMISSING captures enum value "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING"
	TakeProfitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLTRIGGERCONDITIONMISSING string = "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING"
	// TakeProfitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLTRIGGERCONDITIONINVALID captures enum value "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLTRIGGERCONDITIONINVALID string = "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonCLOSETRADETYPEMISSING captures enum value "CLOSE_TRADE_TYPE_MISSING"
	TakeProfitOrderRejectTransactionRejectReasonCLOSETRADETYPEMISSING string = "CLOSE_TRADE_TYPE_MISSING"
	// TakeProfitOrderRejectTransactionRejectReasonCLOSETRADEPARTIALUNITSMISSING captures enum value "CLOSE_TRADE_PARTIAL_UNITS_MISSING"
	TakeProfitOrderRejectTransactionRejectReasonCLOSETRADEPARTIALUNITSMISSING string = "CLOSE_TRADE_PARTIAL_UNITS_MISSING"
	// TakeProfitOrderRejectTransactionRejectReasonCLOSETRADEUNITSEXCEEDTRADESIZE captures enum value "CLOSE_TRADE_UNITS_EXCEED_TRADE_SIZE"
	TakeProfitOrderRejectTransactionRejectReasonCLOSETRADEUNITSEXCEEDTRADESIZE string = "CLOSE_TRADE_UNITS_EXCEED_TRADE_SIZE"
	// TakeProfitOrderRejectTransactionRejectReasonCLOSEOUTPOSITIONDOESNTEXIST captures enum value "CLOSEOUT_POSITION_DOESNT_EXIST"
	TakeProfitOrderRejectTransactionRejectReasonCLOSEOUTPOSITIONDOESNTEXIST string = "CLOSEOUT_POSITION_DOESNT_EXIST"
	// TakeProfitOrderRejectTransactionRejectReasonCLOSEOUTPOSITIONINCOMPLETESPECIFICATION captures enum value "CLOSEOUT_POSITION_INCOMPLETE_SPECIFICATION"
	TakeProfitOrderRejectTransactionRejectReasonCLOSEOUTPOSITIONINCOMPLETESPECIFICATION string = "CLOSEOUT_POSITION_INCOMPLETE_SPECIFICATION"
	// TakeProfitOrderRejectTransactionRejectReasonCLOSEOUTPOSITIONUNITSEXCEEDPOSITIONSIZE captures enum value "CLOSEOUT_POSITION_UNITS_EXCEED_POSITION_SIZE"
	TakeProfitOrderRejectTransactionRejectReasonCLOSEOUTPOSITIONUNITSEXCEEDPOSITIONSIZE string = "CLOSEOUT_POSITION_UNITS_EXCEED_POSITION_SIZE"
	// TakeProfitOrderRejectTransactionRejectReasonCLOSEOUTPOSITIONREJECT captures enum value "CLOSEOUT_POSITION_REJECT"
	TakeProfitOrderRejectTransactionRejectReasonCLOSEOUTPOSITIONREJECT string = "CLOSEOUT_POSITION_REJECT"
	// TakeProfitOrderRejectTransactionRejectReasonCLOSEOUTPOSITIONPARTIALUNITSMISSING captures enum value "CLOSEOUT_POSITION_PARTIAL_UNITS_MISSING"
	TakeProfitOrderRejectTransactionRejectReasonCLOSEOUTPOSITIONPARTIALUNITSMISSING string = "CLOSEOUT_POSITION_PARTIAL_UNITS_MISSING"
	// TakeProfitOrderRejectTransactionRejectReasonMARKUPGROUPIDINVALID captures enum value "MARKUP_GROUP_ID_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonMARKUPGROUPIDINVALID string = "MARKUP_GROUP_ID_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonPOSITIONAGGREGATIONMODEINVALID captures enum value "POSITION_AGGREGATION_MODE_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonPOSITIONAGGREGATIONMODEINVALID string = "POSITION_AGGREGATION_MODE_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonADMINCONFIGUREDATAMISSING captures enum value "ADMIN_CONFIGURE_DATA_MISSING"
	TakeProfitOrderRejectTransactionRejectReasonADMINCONFIGUREDATAMISSING string = "ADMIN_CONFIGURE_DATA_MISSING"
	// TakeProfitOrderRejectTransactionRejectReasonMARGINRATEINVALID captures enum value "MARGIN_RATE_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonMARGINRATEINVALID string = "MARGIN_RATE_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonMARGINRATEWOULDTRIGGERCLOSEOUT captures enum value "MARGIN_RATE_WOULD_TRIGGER_CLOSEOUT"
	TakeProfitOrderRejectTransactionRejectReasonMARGINRATEWOULDTRIGGERCLOSEOUT string = "MARGIN_RATE_WOULD_TRIGGER_CLOSEOUT"
	// TakeProfitOrderRejectTransactionRejectReasonALIASINVALID captures enum value "ALIAS_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonALIASINVALID string = "ALIAS_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonCLIENTCONFIGUREDATAMISSING captures enum value "CLIENT_CONFIGURE_DATA_MISSING"
	TakeProfitOrderRejectTransactionRejectReasonCLIENTCONFIGUREDATAMISSING string = "CLIENT_CONFIGURE_DATA_MISSING"
	// TakeProfitOrderRejectTransactionRejectReasonMARGINRATEWOULDTRIGGERMARGINCALL captures enum value "MARGIN_RATE_WOULD_TRIGGER_MARGIN_CALL"
	TakeProfitOrderRejectTransactionRejectReasonMARGINRATEWOULDTRIGGERMARGINCALL string = "MARGIN_RATE_WOULD_TRIGGER_MARGIN_CALL"
	// TakeProfitOrderRejectTransactionRejectReasonAMOUNTINVALID captures enum value "AMOUNT_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonAMOUNTINVALID string = "AMOUNT_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonINSUFFICIENTFUNDS captures enum value "INSUFFICIENT_FUNDS"
	TakeProfitOrderRejectTransactionRejectReasonINSUFFICIENTFUNDS string = "INSUFFICIENT_FUNDS"
	// TakeProfitOrderRejectTransactionRejectReasonAMOUNTMISSING captures enum value "AMOUNT_MISSING"
	TakeProfitOrderRejectTransactionRejectReasonAMOUNTMISSING string = "AMOUNT_MISSING"
	// TakeProfitOrderRejectTransactionRejectReasonFUNDINGREASONMISSING captures enum value "FUNDING_REASON_MISSING"
	TakeProfitOrderRejectTransactionRejectReasonFUNDINGREASONMISSING string = "FUNDING_REASON_MISSING"
	// TakeProfitOrderRejectTransactionRejectReasonCLIENTEXTENSIONSDATAMISSING captures enum value "CLIENT_EXTENSIONS_DATA_MISSING"
	TakeProfitOrderRejectTransactionRejectReasonCLIENTEXTENSIONSDATAMISSING string = "CLIENT_EXTENSIONS_DATA_MISSING"
	// TakeProfitOrderRejectTransactionRejectReasonREPLACINGORDERINVALID captures enum value "REPLACING_ORDER_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonREPLACINGORDERINVALID string = "REPLACING_ORDER_INVALID"
	// TakeProfitOrderRejectTransactionRejectReasonREPLACINGTRADEIDINVALID captures enum value "REPLACING_TRADE_ID_INVALID"
	TakeProfitOrderRejectTransactionRejectReasonREPLACINGTRADEIDINVALID string = "REPLACING_TRADE_ID_INVALID"
)

// prop value enum
func (m *TakeProfitOrderRejectTransaction) validateRejectReasonEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, takeProfitOrderRejectTransactionTypeRejectReasonPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *TakeProfitOrderRejectTransaction) validateRejectReason(formats strfmt.Registry) error {

	if swag.IsZero(m.RejectReason) { // not required
		return nil
	}

	// value enum
	if err := m.validateRejectReasonEnum("rejectReason", "body", m.RejectReason); err != nil {
		return err
	}

	return nil
}

var takeProfitOrderRejectTransactionTypeTimeInForcePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["GTC","GTD","GFD","FOK","IOC"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		takeProfitOrderRejectTransactionTypeTimeInForcePropEnum = append(takeProfitOrderRejectTransactionTypeTimeInForcePropEnum, v)
	}
}

const (
	// TakeProfitOrderRejectTransactionTimeInForceGTC captures enum value "GTC"
	TakeProfitOrderRejectTransactionTimeInForceGTC string = "GTC"
	// TakeProfitOrderRejectTransactionTimeInForceGTD captures enum value "GTD"
	TakeProfitOrderRejectTransactionTimeInForceGTD string = "GTD"
	// TakeProfitOrderRejectTransactionTimeInForceGFD captures enum value "GFD"
	TakeProfitOrderRejectTransactionTimeInForceGFD string = "GFD"
	// TakeProfitOrderRejectTransactionTimeInForceFOK captures enum value "FOK"
	TakeProfitOrderRejectTransactionTimeInForceFOK string = "FOK"
	// TakeProfitOrderRejectTransactionTimeInForceIOC captures enum value "IOC"
	TakeProfitOrderRejectTransactionTimeInForceIOC string = "IOC"
)

// prop value enum
func (m *TakeProfitOrderRejectTransaction) validateTimeInForceEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, takeProfitOrderRejectTransactionTypeTimeInForcePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *TakeProfitOrderRejectTransaction) validateTimeInForce(formats strfmt.Registry) error {

	if swag.IsZero(m.TimeInForce) { // not required
		return nil
	}

	// value enum
	if err := m.validateTimeInForceEnum("timeInForce", "body", m.TimeInForce); err != nil {
		return err
	}

	return nil
}

var takeProfitOrderRejectTransactionTypeTriggerConditionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["DEFAULT","INVERSE","BID","ASK","MID"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		takeProfitOrderRejectTransactionTypeTriggerConditionPropEnum = append(takeProfitOrderRejectTransactionTypeTriggerConditionPropEnum, v)
	}
}

const (
	// TakeProfitOrderRejectTransactionTriggerConditionDEFAULT captures enum value "DEFAULT"
	TakeProfitOrderRejectTransactionTriggerConditionDEFAULT string = "DEFAULT"
	// TakeProfitOrderRejectTransactionTriggerConditionINVERSE captures enum value "INVERSE"
	TakeProfitOrderRejectTransactionTriggerConditionINVERSE string = "INVERSE"
	// TakeProfitOrderRejectTransactionTriggerConditionBID captures enum value "BID"
	TakeProfitOrderRejectTransactionTriggerConditionBID string = "BID"
	// TakeProfitOrderRejectTransactionTriggerConditionASK captures enum value "ASK"
	TakeProfitOrderRejectTransactionTriggerConditionASK string = "ASK"
	// TakeProfitOrderRejectTransactionTriggerConditionMID captures enum value "MID"
	TakeProfitOrderRejectTransactionTriggerConditionMID string = "MID"
)

// prop value enum
func (m *TakeProfitOrderRejectTransaction) validateTriggerConditionEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, takeProfitOrderRejectTransactionTypeTriggerConditionPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *TakeProfitOrderRejectTransaction) validateTriggerCondition(formats strfmt.Registry) error {

	if swag.IsZero(m.TriggerCondition) { // not required
		return nil
	}

	// value enum
	if err := m.validateTriggerConditionEnum("triggerCondition", "body", m.TriggerCondition); err != nil {
		return err
	}

	return nil
}

var takeProfitOrderRejectTransactionTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["CREATE","CLOSE","REOPEN","CLIENT_CONFIGURE","CLIENT_CONFIGURE_REJECT","TRANSFER_FUNDS","TRANSFER_FUNDS_REJECT","MARKET_ORDER","MARKET_ORDER_REJECT","LIMIT_ORDER","LIMIT_ORDER_REJECT","STOP_ORDER","STOP_ORDER_REJECT","MARKET_IF_TOUCHED_ORDER","MARKET_IF_TOUCHED_ORDER_REJECT","TAKE_PROFIT_ORDER","TAKE_PROFIT_ORDER_REJECT","STOP_LOSS_ORDER","STOP_LOSS_ORDER_REJECT","TRAILING_STOP_LOSS_ORDER","TRAILING_STOP_LOSS_ORDER_REJECT","ORDER_FILL","ORDER_CANCEL","ORDER_CANCEL_REJECT","ORDER_CLIENT_EXTENSIONS_MODIFY","ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT","TRADE_CLIENT_EXTENSIONS_MODIFY","TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT","MARGIN_CALL_ENTER","MARGIN_CALL_EXTEND","MARGIN_CALL_EXIT","DELAYED_TRADE_CLOSURE","DAILY_FINANCING","RESET_RESETTABLE_PL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		takeProfitOrderRejectTransactionTypeTypePropEnum = append(takeProfitOrderRejectTransactionTypeTypePropEnum, v)
	}
}

const (
	// TakeProfitOrderRejectTransactionTypeCREATE captures enum value "CREATE"
	TakeProfitOrderRejectTransactionTypeCREATE string = "CREATE"
	// TakeProfitOrderRejectTransactionTypeCLOSE captures enum value "CLOSE"
	TakeProfitOrderRejectTransactionTypeCLOSE string = "CLOSE"
	// TakeProfitOrderRejectTransactionTypeREOPEN captures enum value "REOPEN"
	TakeProfitOrderRejectTransactionTypeREOPEN string = "REOPEN"
	// TakeProfitOrderRejectTransactionTypeCLIENTCONFIGURE captures enum value "CLIENT_CONFIGURE"
	TakeProfitOrderRejectTransactionTypeCLIENTCONFIGURE string = "CLIENT_CONFIGURE"
	// TakeProfitOrderRejectTransactionTypeCLIENTCONFIGUREREJECT captures enum value "CLIENT_CONFIGURE_REJECT"
	TakeProfitOrderRejectTransactionTypeCLIENTCONFIGUREREJECT string = "CLIENT_CONFIGURE_REJECT"
	// TakeProfitOrderRejectTransactionTypeTRANSFERFUNDS captures enum value "TRANSFER_FUNDS"
	TakeProfitOrderRejectTransactionTypeTRANSFERFUNDS string = "TRANSFER_FUNDS"
	// TakeProfitOrderRejectTransactionTypeTRANSFERFUNDSREJECT captures enum value "TRANSFER_FUNDS_REJECT"
	TakeProfitOrderRejectTransactionTypeTRANSFERFUNDSREJECT string = "TRANSFER_FUNDS_REJECT"
	// TakeProfitOrderRejectTransactionTypeMARKETORDER captures enum value "MARKET_ORDER"
	TakeProfitOrderRejectTransactionTypeMARKETORDER string = "MARKET_ORDER"
	// TakeProfitOrderRejectTransactionTypeMARKETORDERREJECT captures enum value "MARKET_ORDER_REJECT"
	TakeProfitOrderRejectTransactionTypeMARKETORDERREJECT string = "MARKET_ORDER_REJECT"
	// TakeProfitOrderRejectTransactionTypeLIMITORDER captures enum value "LIMIT_ORDER"
	TakeProfitOrderRejectTransactionTypeLIMITORDER string = "LIMIT_ORDER"
	// TakeProfitOrderRejectTransactionTypeLIMITORDERREJECT captures enum value "LIMIT_ORDER_REJECT"
	TakeProfitOrderRejectTransactionTypeLIMITORDERREJECT string = "LIMIT_ORDER_REJECT"
	// TakeProfitOrderRejectTransactionTypeSTOPORDER captures enum value "STOP_ORDER"
	TakeProfitOrderRejectTransactionTypeSTOPORDER string = "STOP_ORDER"
	// TakeProfitOrderRejectTransactionTypeSTOPORDERREJECT captures enum value "STOP_ORDER_REJECT"
	TakeProfitOrderRejectTransactionTypeSTOPORDERREJECT string = "STOP_ORDER_REJECT"
	// TakeProfitOrderRejectTransactionTypeMARKETIFTOUCHEDORDER captures enum value "MARKET_IF_TOUCHED_ORDER"
	TakeProfitOrderRejectTransactionTypeMARKETIFTOUCHEDORDER string = "MARKET_IF_TOUCHED_ORDER"
	// TakeProfitOrderRejectTransactionTypeMARKETIFTOUCHEDORDERREJECT captures enum value "MARKET_IF_TOUCHED_ORDER_REJECT"
	TakeProfitOrderRejectTransactionTypeMARKETIFTOUCHEDORDERREJECT string = "MARKET_IF_TOUCHED_ORDER_REJECT"
	// TakeProfitOrderRejectTransactionTypeTAKEPROFITORDER captures enum value "TAKE_PROFIT_ORDER"
	TakeProfitOrderRejectTransactionTypeTAKEPROFITORDER string = "TAKE_PROFIT_ORDER"
	// TakeProfitOrderRejectTransactionTypeTAKEPROFITORDERREJECT captures enum value "TAKE_PROFIT_ORDER_REJECT"
	TakeProfitOrderRejectTransactionTypeTAKEPROFITORDERREJECT string = "TAKE_PROFIT_ORDER_REJECT"
	// TakeProfitOrderRejectTransactionTypeSTOPLOSSORDER captures enum value "STOP_LOSS_ORDER"
	TakeProfitOrderRejectTransactionTypeSTOPLOSSORDER string = "STOP_LOSS_ORDER"
	// TakeProfitOrderRejectTransactionTypeSTOPLOSSORDERREJECT captures enum value "STOP_LOSS_ORDER_REJECT"
	TakeProfitOrderRejectTransactionTypeSTOPLOSSORDERREJECT string = "STOP_LOSS_ORDER_REJECT"
	// TakeProfitOrderRejectTransactionTypeTRAILINGSTOPLOSSORDER captures enum value "TRAILING_STOP_LOSS_ORDER"
	TakeProfitOrderRejectTransactionTypeTRAILINGSTOPLOSSORDER string = "TRAILING_STOP_LOSS_ORDER"
	// TakeProfitOrderRejectTransactionTypeTRAILINGSTOPLOSSORDERREJECT captures enum value "TRAILING_STOP_LOSS_ORDER_REJECT"
	TakeProfitOrderRejectTransactionTypeTRAILINGSTOPLOSSORDERREJECT string = "TRAILING_STOP_LOSS_ORDER_REJECT"
	// TakeProfitOrderRejectTransactionTypeORDERFILL captures enum value "ORDER_FILL"
	TakeProfitOrderRejectTransactionTypeORDERFILL string = "ORDER_FILL"
	// TakeProfitOrderRejectTransactionTypeORDERCANCEL captures enum value "ORDER_CANCEL"
	TakeProfitOrderRejectTransactionTypeORDERCANCEL string = "ORDER_CANCEL"
	// TakeProfitOrderRejectTransactionTypeORDERCANCELREJECT captures enum value "ORDER_CANCEL_REJECT"
	TakeProfitOrderRejectTransactionTypeORDERCANCELREJECT string = "ORDER_CANCEL_REJECT"
	// TakeProfitOrderRejectTransactionTypeORDERCLIENTEXTENSIONSMODIFY captures enum value "ORDER_CLIENT_EXTENSIONS_MODIFY"
	TakeProfitOrderRejectTransactionTypeORDERCLIENTEXTENSIONSMODIFY string = "ORDER_CLIENT_EXTENSIONS_MODIFY"
	// TakeProfitOrderRejectTransactionTypeORDERCLIENTEXTENSIONSMODIFYREJECT captures enum value "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT"
	TakeProfitOrderRejectTransactionTypeORDERCLIENTEXTENSIONSMODIFYREJECT string = "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT"
	// TakeProfitOrderRejectTransactionTypeTRADECLIENTEXTENSIONSMODIFY captures enum value "TRADE_CLIENT_EXTENSIONS_MODIFY"
	TakeProfitOrderRejectTransactionTypeTRADECLIENTEXTENSIONSMODIFY string = "TRADE_CLIENT_EXTENSIONS_MODIFY"
	// TakeProfitOrderRejectTransactionTypeTRADECLIENTEXTENSIONSMODIFYREJECT captures enum value "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT"
	TakeProfitOrderRejectTransactionTypeTRADECLIENTEXTENSIONSMODIFYREJECT string = "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT"
	// TakeProfitOrderRejectTransactionTypeMARGINCALLENTER captures enum value "MARGIN_CALL_ENTER"
	TakeProfitOrderRejectTransactionTypeMARGINCALLENTER string = "MARGIN_CALL_ENTER"
	// TakeProfitOrderRejectTransactionTypeMARGINCALLEXTEND captures enum value "MARGIN_CALL_EXTEND"
	TakeProfitOrderRejectTransactionTypeMARGINCALLEXTEND string = "MARGIN_CALL_EXTEND"
	// TakeProfitOrderRejectTransactionTypeMARGINCALLEXIT captures enum value "MARGIN_CALL_EXIT"
	TakeProfitOrderRejectTransactionTypeMARGINCALLEXIT string = "MARGIN_CALL_EXIT"
	// TakeProfitOrderRejectTransactionTypeDELAYEDTRADECLOSURE captures enum value "DELAYED_TRADE_CLOSURE"
	TakeProfitOrderRejectTransactionTypeDELAYEDTRADECLOSURE string = "DELAYED_TRADE_CLOSURE"
	// TakeProfitOrderRejectTransactionTypeDAILYFINANCING captures enum value "DAILY_FINANCING"
	TakeProfitOrderRejectTransactionTypeDAILYFINANCING string = "DAILY_FINANCING"
	// TakeProfitOrderRejectTransactionTypeRESETRESETTABLEPL captures enum value "RESET_RESETTABLE_PL"
	TakeProfitOrderRejectTransactionTypeRESETRESETTABLEPL string = "RESET_RESETTABLE_PL"
)

// prop value enum
func (m *TakeProfitOrderRejectTransaction) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, takeProfitOrderRejectTransactionTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *TakeProfitOrderRejectTransaction) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TakeProfitOrderRejectTransaction) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TakeProfitOrderRejectTransaction) UnmarshalBinary(b []byte) error {
	var res TakeProfitOrderRejectTransaction
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
