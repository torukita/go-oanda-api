// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ReplaceOrderBadRequestBody replace order bad request body
// swagger:model replaceOrderBadRequestBody
type ReplaceOrderBadRequestBody struct {

	// The code of the error that has occurred. This field may not be returned for some errors.
	ErrorCode string `json:"errorCode,omitempty"`

	// The human-readable description of the error that has occurred.
	ErrorMessage string `json:"errorMessage,omitempty"`

	// The ID of the most recent Transaction created for the Account.
	LastTransactionID string `json:"lastTransactionID,omitempty"`

	// order reject transaction
	OrderRejectTransaction *Transaction `json:"orderRejectTransaction,omitempty"`

	// The IDs of all Transactions that were created while satisfying the request.
	RelatedTransactionIds []string `json:"relatedTransactionIDs"`
}

// Validate validates this replace order bad request body
func (m *ReplaceOrderBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOrderRejectTransaction(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateRelatedTransactionIds(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ReplaceOrderBadRequestBody) validateOrderRejectTransaction(formats strfmt.Registry) error {

	if swag.IsZero(m.OrderRejectTransaction) { // not required
		return nil
	}

	if m.OrderRejectTransaction != nil {

		if err := m.OrderRejectTransaction.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("orderRejectTransaction")
			}
			return err
		}
	}

	return nil
}

func (m *ReplaceOrderBadRequestBody) validateRelatedTransactionIds(formats strfmt.Registry) error {

	if swag.IsZero(m.RelatedTransactionIds) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ReplaceOrderBadRequestBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ReplaceOrderBadRequestBody) UnmarshalBinary(b []byte) error {
	var res ReplaceOrderBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
