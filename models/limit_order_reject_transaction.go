// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// LimitOrderRejectTransaction A LimitOrderRejectTransaction represents the rejection of the creation of a Limit Order.
// swagger:model LimitOrderRejectTransaction
type LimitOrderRejectTransaction struct {

	// The ID of the Account the Transaction was created for.
	AccountID string `json:"accountID,omitempty"`

	// The ID of the "batch" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.
	BatchID string `json:"batchID,omitempty"`

	// client extensions
	ClientExtensions *ClientExtensions `json:"clientExtensions,omitempty"`

	// The date/time when the Limit Order will be cancelled if its timeInForce is "GTD".
	GtdTime string `json:"gtdTime,omitempty"`

	// The Transaction's Identifier.
	ID string `json:"id,omitempty"`

	// The Limit Order's Instrument.
	Instrument string `json:"instrument,omitempty"`

	// The ID of the Order that this Order was intended to replace (only provided if this Order was intended to replace an existing Order).
	IntendedReplacesOrderID string `json:"intendedReplacesOrderID,omitempty"`

	// Specification of how Positions in the Account are modified when the Order is filled.
	PositionFill string `json:"positionFill,omitempty"`

	// The price threshold specified for the Limit Order. The Limit Order will only be filled by a market price that is equal to or better than this price.
	Price string `json:"price,omitempty"`

	// The reason that the Limit Order was initiated
	Reason string `json:"reason,omitempty"`

	// The reason that the Reject Transaction was created
	RejectReason string `json:"rejectReason,omitempty"`

	// The Request ID of the request which generated the transaction.
	RequestID string `json:"requestID,omitempty"`

	// stop loss on fill
	StopLossOnFill *StopLossDetails `json:"stopLossOnFill,omitempty"`

	// take profit on fill
	TakeProfitOnFill *TakeProfitDetails `json:"takeProfitOnFill,omitempty"`

	// The date/time when the Transaction was created.
	Time string `json:"time,omitempty"`

	// The time-in-force requested for the Limit Order.
	TimeInForce string `json:"timeInForce,omitempty"`

	// trade client extensions
	TradeClientExtensions *ClientExtensions `json:"tradeClientExtensions,omitempty"`

	// trailing stop loss on fill
	TrailingStopLossOnFill *TrailingStopLossDetails `json:"trailingStopLossOnFill,omitempty"`

	// Specification of what component of a price should be used for comparison when determining if the Order should be filled.
	TriggerCondition string `json:"triggerCondition,omitempty"`

	// The Type of the Transaction. Always set to "LIMIT_ORDER_REJECT" in a LimitOrderRejectTransaction.
	Type string `json:"type,omitempty"`

	// The quantity requested to be filled by the Limit Order. A posititive number of units results in a long Order, and a negative number of units results in a short Order.
	Units string `json:"units,omitempty"`

	// The ID of the user that initiated the creation of the Transaction.
	UserID int64 `json:"userID,omitempty"`
}

// Validate validates this limit order reject transaction
func (m *LimitOrderRejectTransaction) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClientExtensions(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePositionFill(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateReason(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateRejectReason(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateStopLossOnFill(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTakeProfitOnFill(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTimeInForce(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTradeClientExtensions(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTrailingStopLossOnFill(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTriggerCondition(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LimitOrderRejectTransaction) validateClientExtensions(formats strfmt.Registry) error {

	if swag.IsZero(m.ClientExtensions) { // not required
		return nil
	}

	if m.ClientExtensions != nil {

		if err := m.ClientExtensions.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("clientExtensions")
			}
			return err
		}
	}

	return nil
}

var limitOrderRejectTransactionTypePositionFillPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["OPEN_ONLY","REDUCE_FIRST","REDUCE_ONLY","DEFAULT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		limitOrderRejectTransactionTypePositionFillPropEnum = append(limitOrderRejectTransactionTypePositionFillPropEnum, v)
	}
}

const (
	// LimitOrderRejectTransactionPositionFillOPENONLY captures enum value "OPEN_ONLY"
	LimitOrderRejectTransactionPositionFillOPENONLY string = "OPEN_ONLY"
	// LimitOrderRejectTransactionPositionFillREDUCEFIRST captures enum value "REDUCE_FIRST"
	LimitOrderRejectTransactionPositionFillREDUCEFIRST string = "REDUCE_FIRST"
	// LimitOrderRejectTransactionPositionFillREDUCEONLY captures enum value "REDUCE_ONLY"
	LimitOrderRejectTransactionPositionFillREDUCEONLY string = "REDUCE_ONLY"
	// LimitOrderRejectTransactionPositionFillDEFAULT captures enum value "DEFAULT"
	LimitOrderRejectTransactionPositionFillDEFAULT string = "DEFAULT"
)

// prop value enum
func (m *LimitOrderRejectTransaction) validatePositionFillEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, limitOrderRejectTransactionTypePositionFillPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *LimitOrderRejectTransaction) validatePositionFill(formats strfmt.Registry) error {

	if swag.IsZero(m.PositionFill) { // not required
		return nil
	}

	// value enum
	if err := m.validatePositionFillEnum("positionFill", "body", m.PositionFill); err != nil {
		return err
	}

	return nil
}

var limitOrderRejectTransactionTypeReasonPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["CLIENT_ORDER","REPLACEMENT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		limitOrderRejectTransactionTypeReasonPropEnum = append(limitOrderRejectTransactionTypeReasonPropEnum, v)
	}
}

const (
	// LimitOrderRejectTransactionReasonCLIENTORDER captures enum value "CLIENT_ORDER"
	LimitOrderRejectTransactionReasonCLIENTORDER string = "CLIENT_ORDER"
	// LimitOrderRejectTransactionReasonREPLACEMENT captures enum value "REPLACEMENT"
	LimitOrderRejectTransactionReasonREPLACEMENT string = "REPLACEMENT"
)

// prop value enum
func (m *LimitOrderRejectTransaction) validateReasonEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, limitOrderRejectTransactionTypeReasonPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *LimitOrderRejectTransaction) validateReason(formats strfmt.Registry) error {

	if swag.IsZero(m.Reason) { // not required
		return nil
	}

	// value enum
	if err := m.validateReasonEnum("reason", "body", m.Reason); err != nil {
		return err
	}

	return nil
}

var limitOrderRejectTransactionTypeRejectReasonPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["INTERNAL_SERVER_ERROR","INSTRUMENT_PRICE_UNKNOWN","ACCOUNT_NOT_ACTIVE","ACCOUNT_LOCKED","ACCOUNT_ORDER_CREATION_LOCKED","ACCOUNT_CONFIGURATION_LOCKED","ACCOUNT_DEPOSIT_LOCKED","ACCOUNT_WITHDRAWAL_LOCKED","ACCOUNT_ORDER_CANCEL_LOCKED","INSTRUMENT_NOT_TRADEABLE","PENDING_ORDERS_ALLOWED_EXCEEDED","ORDER_ID_UNSPECIFIED","ORDER_DOESNT_EXIST","ORDER_IDENTIFIER_INCONSISTENCY","TRADE_ID_UNSPECIFIED","TRADE_DOESNT_EXIST","TRADE_IDENTIFIER_INCONSISTENCY","INSTRUMENT_MISSING","INSTRUMENT_UNKNOWN","UNITS_MISSING","UNITS_INVALID","UNITS_PRECISION_EXCEEDED","UNITS_LIMIT_EXCEEDED","UNITS_MIMIMUM_NOT_MET","PRICE_MISSING","PRICE_INVALID","PRICE_PRECISION_EXCEEDED","PRICE_DISTANCE_MISSING","PRICE_DISTANCE_INVALID","PRICE_DISTANCE_PRECISION_EXCEEDED","PRICE_DISTANCE_MAXIMUM_EXCEEDED","PRICE_DISTANCE_MINIMUM_NOT_MET","TIME_IN_FORCE_MISSING","TIME_IN_FORCE_INVALID","TIME_IN_FORCE_GTD_TIMESTAMP_MISSING","TIME_IN_FORCE_GTD_TIMESTAMP_IN_PAST","PRICE_BOUND_INVALID","PRICE_BOUND_PRECISION_EXCEEDED","ORDERS_ON_FILL_DUPLICATE_CLIENT_ORDER_IDS","TRADE_ON_FILL_CLIENT_EXTENSIONS_NOT_SUPPORTED","CLIENT_ORDER_ID_INVALID","CLIENT_ORDER_ID_ALREADY_EXISTS","CLIENT_ORDER_TAG_INVALID","CLIENT_ORDER_COMMENT_INVALID","CLIENT_TRADE_ID_INVALID","CLIENT_TRADE_ID_ALREADY_EXISTS","CLIENT_TRADE_TAG_INVALID","CLIENT_TRADE_COMMENT_INVALID","ORDER_FILL_POSITION_ACTION_MISSING","ORDER_FILL_POSITION_ACTION_INVALID","TRIGGER_CONDITION_MISSING","TRIGGER_CONDITION_INVALID","ORDER_PARTIAL_FILL_OPTION_MISSING","ORDER_PARTIAL_FILL_OPTION_INVALID","INVALID_REISSUE_IMMEDIATE_PARTIAL_FILL","TAKE_PROFIT_ORDER_ALREADY_EXISTS","TAKE_PROFIT_ON_FILL_PRICE_MISSING","TAKE_PROFIT_ON_FILL_PRICE_INVALID","TAKE_PROFIT_ON_FILL_PRICE_PRECISION_EXCEEDED","TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_MISSING","TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_INVALID","TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_MISSING","TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_IN_PAST","TAKE_PROFIT_ON_FILL_CLIENT_ORDER_ID_INVALID","TAKE_PROFIT_ON_FILL_CLIENT_ORDER_TAG_INVALID","TAKE_PROFIT_ON_FILL_CLIENT_ORDER_COMMENT_INVALID","TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_MISSING","TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_INVALID","STOP_LOSS_ORDER_ALREADY_EXISTS","STOP_LOSS_ON_FILL_PRICE_MISSING","STOP_LOSS_ON_FILL_PRICE_INVALID","STOP_LOSS_ON_FILL_PRICE_PRECISION_EXCEEDED","STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING","STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID","STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING","STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST","STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID","STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID","STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID","STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING","STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID","TRAILING_STOP_LOSS_ORDER_ALREADY_EXISTS","TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MISSING","TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_INVALID","TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_PRECISION_EXCEEDED","TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED","TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MINIMUM_NOT_MET","TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING","TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID","TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING","TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST","TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID","TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID","TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID","TRAILING_STOP_LOSS_ORDERS_NOT_SUPPORTED","TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING","TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID","CLOSE_TRADE_TYPE_MISSING","CLOSE_TRADE_PARTIAL_UNITS_MISSING","CLOSE_TRADE_UNITS_EXCEED_TRADE_SIZE","CLOSEOUT_POSITION_DOESNT_EXIST","CLOSEOUT_POSITION_INCOMPLETE_SPECIFICATION","CLOSEOUT_POSITION_UNITS_EXCEED_POSITION_SIZE","CLOSEOUT_POSITION_REJECT","CLOSEOUT_POSITION_PARTIAL_UNITS_MISSING","MARKUP_GROUP_ID_INVALID","POSITION_AGGREGATION_MODE_INVALID","ADMIN_CONFIGURE_DATA_MISSING","MARGIN_RATE_INVALID","MARGIN_RATE_WOULD_TRIGGER_CLOSEOUT","ALIAS_INVALID","CLIENT_CONFIGURE_DATA_MISSING","MARGIN_RATE_WOULD_TRIGGER_MARGIN_CALL","AMOUNT_INVALID","INSUFFICIENT_FUNDS","AMOUNT_MISSING","FUNDING_REASON_MISSING","CLIENT_EXTENSIONS_DATA_MISSING","REPLACING_ORDER_INVALID","REPLACING_TRADE_ID_INVALID"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		limitOrderRejectTransactionTypeRejectReasonPropEnum = append(limitOrderRejectTransactionTypeRejectReasonPropEnum, v)
	}
}

const (
	// LimitOrderRejectTransactionRejectReasonINTERNALSERVERERROR captures enum value "INTERNAL_SERVER_ERROR"
	LimitOrderRejectTransactionRejectReasonINTERNALSERVERERROR string = "INTERNAL_SERVER_ERROR"
	// LimitOrderRejectTransactionRejectReasonINSTRUMENTPRICEUNKNOWN captures enum value "INSTRUMENT_PRICE_UNKNOWN"
	LimitOrderRejectTransactionRejectReasonINSTRUMENTPRICEUNKNOWN string = "INSTRUMENT_PRICE_UNKNOWN"
	// LimitOrderRejectTransactionRejectReasonACCOUNTNOTACTIVE captures enum value "ACCOUNT_NOT_ACTIVE"
	LimitOrderRejectTransactionRejectReasonACCOUNTNOTACTIVE string = "ACCOUNT_NOT_ACTIVE"
	// LimitOrderRejectTransactionRejectReasonACCOUNTLOCKED captures enum value "ACCOUNT_LOCKED"
	LimitOrderRejectTransactionRejectReasonACCOUNTLOCKED string = "ACCOUNT_LOCKED"
	// LimitOrderRejectTransactionRejectReasonACCOUNTORDERCREATIONLOCKED captures enum value "ACCOUNT_ORDER_CREATION_LOCKED"
	LimitOrderRejectTransactionRejectReasonACCOUNTORDERCREATIONLOCKED string = "ACCOUNT_ORDER_CREATION_LOCKED"
	// LimitOrderRejectTransactionRejectReasonACCOUNTCONFIGURATIONLOCKED captures enum value "ACCOUNT_CONFIGURATION_LOCKED"
	LimitOrderRejectTransactionRejectReasonACCOUNTCONFIGURATIONLOCKED string = "ACCOUNT_CONFIGURATION_LOCKED"
	// LimitOrderRejectTransactionRejectReasonACCOUNTDEPOSITLOCKED captures enum value "ACCOUNT_DEPOSIT_LOCKED"
	LimitOrderRejectTransactionRejectReasonACCOUNTDEPOSITLOCKED string = "ACCOUNT_DEPOSIT_LOCKED"
	// LimitOrderRejectTransactionRejectReasonACCOUNTWITHDRAWALLOCKED captures enum value "ACCOUNT_WITHDRAWAL_LOCKED"
	LimitOrderRejectTransactionRejectReasonACCOUNTWITHDRAWALLOCKED string = "ACCOUNT_WITHDRAWAL_LOCKED"
	// LimitOrderRejectTransactionRejectReasonACCOUNTORDERCANCELLOCKED captures enum value "ACCOUNT_ORDER_CANCEL_LOCKED"
	LimitOrderRejectTransactionRejectReasonACCOUNTORDERCANCELLOCKED string = "ACCOUNT_ORDER_CANCEL_LOCKED"
	// LimitOrderRejectTransactionRejectReasonINSTRUMENTNOTTRADEABLE captures enum value "INSTRUMENT_NOT_TRADEABLE"
	LimitOrderRejectTransactionRejectReasonINSTRUMENTNOTTRADEABLE string = "INSTRUMENT_NOT_TRADEABLE"
	// LimitOrderRejectTransactionRejectReasonPENDINGORDERSALLOWEDEXCEEDED captures enum value "PENDING_ORDERS_ALLOWED_EXCEEDED"
	LimitOrderRejectTransactionRejectReasonPENDINGORDERSALLOWEDEXCEEDED string = "PENDING_ORDERS_ALLOWED_EXCEEDED"
	// LimitOrderRejectTransactionRejectReasonORDERIDUNSPECIFIED captures enum value "ORDER_ID_UNSPECIFIED"
	LimitOrderRejectTransactionRejectReasonORDERIDUNSPECIFIED string = "ORDER_ID_UNSPECIFIED"
	// LimitOrderRejectTransactionRejectReasonORDERDOESNTEXIST captures enum value "ORDER_DOESNT_EXIST"
	LimitOrderRejectTransactionRejectReasonORDERDOESNTEXIST string = "ORDER_DOESNT_EXIST"
	// LimitOrderRejectTransactionRejectReasonORDERIDENTIFIERINCONSISTENCY captures enum value "ORDER_IDENTIFIER_INCONSISTENCY"
	LimitOrderRejectTransactionRejectReasonORDERIDENTIFIERINCONSISTENCY string = "ORDER_IDENTIFIER_INCONSISTENCY"
	// LimitOrderRejectTransactionRejectReasonTRADEIDUNSPECIFIED captures enum value "TRADE_ID_UNSPECIFIED"
	LimitOrderRejectTransactionRejectReasonTRADEIDUNSPECIFIED string = "TRADE_ID_UNSPECIFIED"
	// LimitOrderRejectTransactionRejectReasonTRADEDOESNTEXIST captures enum value "TRADE_DOESNT_EXIST"
	LimitOrderRejectTransactionRejectReasonTRADEDOESNTEXIST string = "TRADE_DOESNT_EXIST"
	// LimitOrderRejectTransactionRejectReasonTRADEIDENTIFIERINCONSISTENCY captures enum value "TRADE_IDENTIFIER_INCONSISTENCY"
	LimitOrderRejectTransactionRejectReasonTRADEIDENTIFIERINCONSISTENCY string = "TRADE_IDENTIFIER_INCONSISTENCY"
	// LimitOrderRejectTransactionRejectReasonINSTRUMENTMISSING captures enum value "INSTRUMENT_MISSING"
	LimitOrderRejectTransactionRejectReasonINSTRUMENTMISSING string = "INSTRUMENT_MISSING"
	// LimitOrderRejectTransactionRejectReasonINSTRUMENTUNKNOWN captures enum value "INSTRUMENT_UNKNOWN"
	LimitOrderRejectTransactionRejectReasonINSTRUMENTUNKNOWN string = "INSTRUMENT_UNKNOWN"
	// LimitOrderRejectTransactionRejectReasonUNITSMISSING captures enum value "UNITS_MISSING"
	LimitOrderRejectTransactionRejectReasonUNITSMISSING string = "UNITS_MISSING"
	// LimitOrderRejectTransactionRejectReasonUNITSINVALID captures enum value "UNITS_INVALID"
	LimitOrderRejectTransactionRejectReasonUNITSINVALID string = "UNITS_INVALID"
	// LimitOrderRejectTransactionRejectReasonUNITSPRECISIONEXCEEDED captures enum value "UNITS_PRECISION_EXCEEDED"
	LimitOrderRejectTransactionRejectReasonUNITSPRECISIONEXCEEDED string = "UNITS_PRECISION_EXCEEDED"
	// LimitOrderRejectTransactionRejectReasonUNITSLIMITEXCEEDED captures enum value "UNITS_LIMIT_EXCEEDED"
	LimitOrderRejectTransactionRejectReasonUNITSLIMITEXCEEDED string = "UNITS_LIMIT_EXCEEDED"
	// LimitOrderRejectTransactionRejectReasonUNITSMIMIMUMNOTMET captures enum value "UNITS_MIMIMUM_NOT_MET"
	LimitOrderRejectTransactionRejectReasonUNITSMIMIMUMNOTMET string = "UNITS_MIMIMUM_NOT_MET"
	// LimitOrderRejectTransactionRejectReasonPRICEMISSING captures enum value "PRICE_MISSING"
	LimitOrderRejectTransactionRejectReasonPRICEMISSING string = "PRICE_MISSING"
	// LimitOrderRejectTransactionRejectReasonPRICEINVALID captures enum value "PRICE_INVALID"
	LimitOrderRejectTransactionRejectReasonPRICEINVALID string = "PRICE_INVALID"
	// LimitOrderRejectTransactionRejectReasonPRICEPRECISIONEXCEEDED captures enum value "PRICE_PRECISION_EXCEEDED"
	LimitOrderRejectTransactionRejectReasonPRICEPRECISIONEXCEEDED string = "PRICE_PRECISION_EXCEEDED"
	// LimitOrderRejectTransactionRejectReasonPRICEDISTANCEMISSING captures enum value "PRICE_DISTANCE_MISSING"
	LimitOrderRejectTransactionRejectReasonPRICEDISTANCEMISSING string = "PRICE_DISTANCE_MISSING"
	// LimitOrderRejectTransactionRejectReasonPRICEDISTANCEINVALID captures enum value "PRICE_DISTANCE_INVALID"
	LimitOrderRejectTransactionRejectReasonPRICEDISTANCEINVALID string = "PRICE_DISTANCE_INVALID"
	// LimitOrderRejectTransactionRejectReasonPRICEDISTANCEPRECISIONEXCEEDED captures enum value "PRICE_DISTANCE_PRECISION_EXCEEDED"
	LimitOrderRejectTransactionRejectReasonPRICEDISTANCEPRECISIONEXCEEDED string = "PRICE_DISTANCE_PRECISION_EXCEEDED"
	// LimitOrderRejectTransactionRejectReasonPRICEDISTANCEMAXIMUMEXCEEDED captures enum value "PRICE_DISTANCE_MAXIMUM_EXCEEDED"
	LimitOrderRejectTransactionRejectReasonPRICEDISTANCEMAXIMUMEXCEEDED string = "PRICE_DISTANCE_MAXIMUM_EXCEEDED"
	// LimitOrderRejectTransactionRejectReasonPRICEDISTANCEMINIMUMNOTMET captures enum value "PRICE_DISTANCE_MINIMUM_NOT_MET"
	LimitOrderRejectTransactionRejectReasonPRICEDISTANCEMINIMUMNOTMET string = "PRICE_DISTANCE_MINIMUM_NOT_MET"
	// LimitOrderRejectTransactionRejectReasonTIMEINFORCEMISSING captures enum value "TIME_IN_FORCE_MISSING"
	LimitOrderRejectTransactionRejectReasonTIMEINFORCEMISSING string = "TIME_IN_FORCE_MISSING"
	// LimitOrderRejectTransactionRejectReasonTIMEINFORCEINVALID captures enum value "TIME_IN_FORCE_INVALID"
	LimitOrderRejectTransactionRejectReasonTIMEINFORCEINVALID string = "TIME_IN_FORCE_INVALID"
	// LimitOrderRejectTransactionRejectReasonTIMEINFORCEGTDTIMESTAMPMISSING captures enum value "TIME_IN_FORCE_GTD_TIMESTAMP_MISSING"
	LimitOrderRejectTransactionRejectReasonTIMEINFORCEGTDTIMESTAMPMISSING string = "TIME_IN_FORCE_GTD_TIMESTAMP_MISSING"
	// LimitOrderRejectTransactionRejectReasonTIMEINFORCEGTDTIMESTAMPINPAST captures enum value "TIME_IN_FORCE_GTD_TIMESTAMP_IN_PAST"
	LimitOrderRejectTransactionRejectReasonTIMEINFORCEGTDTIMESTAMPINPAST string = "TIME_IN_FORCE_GTD_TIMESTAMP_IN_PAST"
	// LimitOrderRejectTransactionRejectReasonPRICEBOUNDINVALID captures enum value "PRICE_BOUND_INVALID"
	LimitOrderRejectTransactionRejectReasonPRICEBOUNDINVALID string = "PRICE_BOUND_INVALID"
	// LimitOrderRejectTransactionRejectReasonPRICEBOUNDPRECISIONEXCEEDED captures enum value "PRICE_BOUND_PRECISION_EXCEEDED"
	LimitOrderRejectTransactionRejectReasonPRICEBOUNDPRECISIONEXCEEDED string = "PRICE_BOUND_PRECISION_EXCEEDED"
	// LimitOrderRejectTransactionRejectReasonORDERSONFILLDUPLICATECLIENTORDERIDS captures enum value "ORDERS_ON_FILL_DUPLICATE_CLIENT_ORDER_IDS"
	LimitOrderRejectTransactionRejectReasonORDERSONFILLDUPLICATECLIENTORDERIDS string = "ORDERS_ON_FILL_DUPLICATE_CLIENT_ORDER_IDS"
	// LimitOrderRejectTransactionRejectReasonTRADEONFILLCLIENTEXTENSIONSNOTSUPPORTED captures enum value "TRADE_ON_FILL_CLIENT_EXTENSIONS_NOT_SUPPORTED"
	LimitOrderRejectTransactionRejectReasonTRADEONFILLCLIENTEXTENSIONSNOTSUPPORTED string = "TRADE_ON_FILL_CLIENT_EXTENSIONS_NOT_SUPPORTED"
	// LimitOrderRejectTransactionRejectReasonCLIENTORDERIDINVALID captures enum value "CLIENT_ORDER_ID_INVALID"
	LimitOrderRejectTransactionRejectReasonCLIENTORDERIDINVALID string = "CLIENT_ORDER_ID_INVALID"
	// LimitOrderRejectTransactionRejectReasonCLIENTORDERIDALREADYEXISTS captures enum value "CLIENT_ORDER_ID_ALREADY_EXISTS"
	LimitOrderRejectTransactionRejectReasonCLIENTORDERIDALREADYEXISTS string = "CLIENT_ORDER_ID_ALREADY_EXISTS"
	// LimitOrderRejectTransactionRejectReasonCLIENTORDERTAGINVALID captures enum value "CLIENT_ORDER_TAG_INVALID"
	LimitOrderRejectTransactionRejectReasonCLIENTORDERTAGINVALID string = "CLIENT_ORDER_TAG_INVALID"
	// LimitOrderRejectTransactionRejectReasonCLIENTORDERCOMMENTINVALID captures enum value "CLIENT_ORDER_COMMENT_INVALID"
	LimitOrderRejectTransactionRejectReasonCLIENTORDERCOMMENTINVALID string = "CLIENT_ORDER_COMMENT_INVALID"
	// LimitOrderRejectTransactionRejectReasonCLIENTTRADEIDINVALID captures enum value "CLIENT_TRADE_ID_INVALID"
	LimitOrderRejectTransactionRejectReasonCLIENTTRADEIDINVALID string = "CLIENT_TRADE_ID_INVALID"
	// LimitOrderRejectTransactionRejectReasonCLIENTTRADEIDALREADYEXISTS captures enum value "CLIENT_TRADE_ID_ALREADY_EXISTS"
	LimitOrderRejectTransactionRejectReasonCLIENTTRADEIDALREADYEXISTS string = "CLIENT_TRADE_ID_ALREADY_EXISTS"
	// LimitOrderRejectTransactionRejectReasonCLIENTTRADETAGINVALID captures enum value "CLIENT_TRADE_TAG_INVALID"
	LimitOrderRejectTransactionRejectReasonCLIENTTRADETAGINVALID string = "CLIENT_TRADE_TAG_INVALID"
	// LimitOrderRejectTransactionRejectReasonCLIENTTRADECOMMENTINVALID captures enum value "CLIENT_TRADE_COMMENT_INVALID"
	LimitOrderRejectTransactionRejectReasonCLIENTTRADECOMMENTINVALID string = "CLIENT_TRADE_COMMENT_INVALID"
	// LimitOrderRejectTransactionRejectReasonORDERFILLPOSITIONACTIONMISSING captures enum value "ORDER_FILL_POSITION_ACTION_MISSING"
	LimitOrderRejectTransactionRejectReasonORDERFILLPOSITIONACTIONMISSING string = "ORDER_FILL_POSITION_ACTION_MISSING"
	// LimitOrderRejectTransactionRejectReasonORDERFILLPOSITIONACTIONINVALID captures enum value "ORDER_FILL_POSITION_ACTION_INVALID"
	LimitOrderRejectTransactionRejectReasonORDERFILLPOSITIONACTIONINVALID string = "ORDER_FILL_POSITION_ACTION_INVALID"
	// LimitOrderRejectTransactionRejectReasonTRIGGERCONDITIONMISSING captures enum value "TRIGGER_CONDITION_MISSING"
	LimitOrderRejectTransactionRejectReasonTRIGGERCONDITIONMISSING string = "TRIGGER_CONDITION_MISSING"
	// LimitOrderRejectTransactionRejectReasonTRIGGERCONDITIONINVALID captures enum value "TRIGGER_CONDITION_INVALID"
	LimitOrderRejectTransactionRejectReasonTRIGGERCONDITIONINVALID string = "TRIGGER_CONDITION_INVALID"
	// LimitOrderRejectTransactionRejectReasonORDERPARTIALFILLOPTIONMISSING captures enum value "ORDER_PARTIAL_FILL_OPTION_MISSING"
	LimitOrderRejectTransactionRejectReasonORDERPARTIALFILLOPTIONMISSING string = "ORDER_PARTIAL_FILL_OPTION_MISSING"
	// LimitOrderRejectTransactionRejectReasonORDERPARTIALFILLOPTIONINVALID captures enum value "ORDER_PARTIAL_FILL_OPTION_INVALID"
	LimitOrderRejectTransactionRejectReasonORDERPARTIALFILLOPTIONINVALID string = "ORDER_PARTIAL_FILL_OPTION_INVALID"
	// LimitOrderRejectTransactionRejectReasonINVALIDREISSUEIMMEDIATEPARTIALFILL captures enum value "INVALID_REISSUE_IMMEDIATE_PARTIAL_FILL"
	LimitOrderRejectTransactionRejectReasonINVALIDREISSUEIMMEDIATEPARTIALFILL string = "INVALID_REISSUE_IMMEDIATE_PARTIAL_FILL"
	// LimitOrderRejectTransactionRejectReasonTAKEPROFITORDERALREADYEXISTS captures enum value "TAKE_PROFIT_ORDER_ALREADY_EXISTS"
	LimitOrderRejectTransactionRejectReasonTAKEPROFITORDERALREADYEXISTS string = "TAKE_PROFIT_ORDER_ALREADY_EXISTS"
	// LimitOrderRejectTransactionRejectReasonTAKEPROFITONFILLPRICEMISSING captures enum value "TAKE_PROFIT_ON_FILL_PRICE_MISSING"
	LimitOrderRejectTransactionRejectReasonTAKEPROFITONFILLPRICEMISSING string = "TAKE_PROFIT_ON_FILL_PRICE_MISSING"
	// LimitOrderRejectTransactionRejectReasonTAKEPROFITONFILLPRICEINVALID captures enum value "TAKE_PROFIT_ON_FILL_PRICE_INVALID"
	LimitOrderRejectTransactionRejectReasonTAKEPROFITONFILLPRICEINVALID string = "TAKE_PROFIT_ON_FILL_PRICE_INVALID"
	// LimitOrderRejectTransactionRejectReasonTAKEPROFITONFILLPRICEPRECISIONEXCEEDED captures enum value "TAKE_PROFIT_ON_FILL_PRICE_PRECISION_EXCEEDED"
	LimitOrderRejectTransactionRejectReasonTAKEPROFITONFILLPRICEPRECISIONEXCEEDED string = "TAKE_PROFIT_ON_FILL_PRICE_PRECISION_EXCEEDED"
	// LimitOrderRejectTransactionRejectReasonTAKEPROFITONFILLTIMEINFORCEMISSING captures enum value "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_MISSING"
	LimitOrderRejectTransactionRejectReasonTAKEPROFITONFILLTIMEINFORCEMISSING string = "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_MISSING"
	// LimitOrderRejectTransactionRejectReasonTAKEPROFITONFILLTIMEINFORCEINVALID captures enum value "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_INVALID"
	LimitOrderRejectTransactionRejectReasonTAKEPROFITONFILLTIMEINFORCEINVALID string = "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_INVALID"
	// LimitOrderRejectTransactionRejectReasonTAKEPROFITONFILLGTDTIMESTAMPMISSING captures enum value "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_MISSING"
	LimitOrderRejectTransactionRejectReasonTAKEPROFITONFILLGTDTIMESTAMPMISSING string = "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_MISSING"
	// LimitOrderRejectTransactionRejectReasonTAKEPROFITONFILLGTDTIMESTAMPINPAST captures enum value "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_IN_PAST"
	LimitOrderRejectTransactionRejectReasonTAKEPROFITONFILLGTDTIMESTAMPINPAST string = "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_IN_PAST"
	// LimitOrderRejectTransactionRejectReasonTAKEPROFITONFILLCLIENTORDERIDINVALID captures enum value "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_ID_INVALID"
	LimitOrderRejectTransactionRejectReasonTAKEPROFITONFILLCLIENTORDERIDINVALID string = "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_ID_INVALID"
	// LimitOrderRejectTransactionRejectReasonTAKEPROFITONFILLCLIENTORDERTAGINVALID captures enum value "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_TAG_INVALID"
	LimitOrderRejectTransactionRejectReasonTAKEPROFITONFILLCLIENTORDERTAGINVALID string = "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_TAG_INVALID"
	// LimitOrderRejectTransactionRejectReasonTAKEPROFITONFILLCLIENTORDERCOMMENTINVALID captures enum value "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_COMMENT_INVALID"
	LimitOrderRejectTransactionRejectReasonTAKEPROFITONFILLCLIENTORDERCOMMENTINVALID string = "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_COMMENT_INVALID"
	// LimitOrderRejectTransactionRejectReasonTAKEPROFITONFILLTRIGGERCONDITIONMISSING captures enum value "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_MISSING"
	LimitOrderRejectTransactionRejectReasonTAKEPROFITONFILLTRIGGERCONDITIONMISSING string = "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_MISSING"
	// LimitOrderRejectTransactionRejectReasonTAKEPROFITONFILLTRIGGERCONDITIONINVALID captures enum value "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_INVALID"
	LimitOrderRejectTransactionRejectReasonTAKEPROFITONFILLTRIGGERCONDITIONINVALID string = "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_INVALID"
	// LimitOrderRejectTransactionRejectReasonSTOPLOSSORDERALREADYEXISTS captures enum value "STOP_LOSS_ORDER_ALREADY_EXISTS"
	LimitOrderRejectTransactionRejectReasonSTOPLOSSORDERALREADYEXISTS string = "STOP_LOSS_ORDER_ALREADY_EXISTS"
	// LimitOrderRejectTransactionRejectReasonSTOPLOSSONFILLPRICEMISSING captures enum value "STOP_LOSS_ON_FILL_PRICE_MISSING"
	LimitOrderRejectTransactionRejectReasonSTOPLOSSONFILLPRICEMISSING string = "STOP_LOSS_ON_FILL_PRICE_MISSING"
	// LimitOrderRejectTransactionRejectReasonSTOPLOSSONFILLPRICEINVALID captures enum value "STOP_LOSS_ON_FILL_PRICE_INVALID"
	LimitOrderRejectTransactionRejectReasonSTOPLOSSONFILLPRICEINVALID string = "STOP_LOSS_ON_FILL_PRICE_INVALID"
	// LimitOrderRejectTransactionRejectReasonSTOPLOSSONFILLPRICEPRECISIONEXCEEDED captures enum value "STOP_LOSS_ON_FILL_PRICE_PRECISION_EXCEEDED"
	LimitOrderRejectTransactionRejectReasonSTOPLOSSONFILLPRICEPRECISIONEXCEEDED string = "STOP_LOSS_ON_FILL_PRICE_PRECISION_EXCEEDED"
	// LimitOrderRejectTransactionRejectReasonSTOPLOSSONFILLTIMEINFORCEMISSING captures enum value "STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING"
	LimitOrderRejectTransactionRejectReasonSTOPLOSSONFILLTIMEINFORCEMISSING string = "STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING"
	// LimitOrderRejectTransactionRejectReasonSTOPLOSSONFILLTIMEINFORCEINVALID captures enum value "STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID"
	LimitOrderRejectTransactionRejectReasonSTOPLOSSONFILLTIMEINFORCEINVALID string = "STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID"
	// LimitOrderRejectTransactionRejectReasonSTOPLOSSONFILLGTDTIMESTAMPMISSING captures enum value "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING"
	LimitOrderRejectTransactionRejectReasonSTOPLOSSONFILLGTDTIMESTAMPMISSING string = "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING"
	// LimitOrderRejectTransactionRejectReasonSTOPLOSSONFILLGTDTIMESTAMPINPAST captures enum value "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST"
	LimitOrderRejectTransactionRejectReasonSTOPLOSSONFILLGTDTIMESTAMPINPAST string = "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST"
	// LimitOrderRejectTransactionRejectReasonSTOPLOSSONFILLCLIENTORDERIDINVALID captures enum value "STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID"
	LimitOrderRejectTransactionRejectReasonSTOPLOSSONFILLCLIENTORDERIDINVALID string = "STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID"
	// LimitOrderRejectTransactionRejectReasonSTOPLOSSONFILLCLIENTORDERTAGINVALID captures enum value "STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID"
	LimitOrderRejectTransactionRejectReasonSTOPLOSSONFILLCLIENTORDERTAGINVALID string = "STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID"
	// LimitOrderRejectTransactionRejectReasonSTOPLOSSONFILLCLIENTORDERCOMMENTINVALID captures enum value "STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID"
	LimitOrderRejectTransactionRejectReasonSTOPLOSSONFILLCLIENTORDERCOMMENTINVALID string = "STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID"
	// LimitOrderRejectTransactionRejectReasonSTOPLOSSONFILLTRIGGERCONDITIONMISSING captures enum value "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING"
	LimitOrderRejectTransactionRejectReasonSTOPLOSSONFILLTRIGGERCONDITIONMISSING string = "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING"
	// LimitOrderRejectTransactionRejectReasonSTOPLOSSONFILLTRIGGERCONDITIONINVALID captures enum value "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID"
	LimitOrderRejectTransactionRejectReasonSTOPLOSSONFILLTRIGGERCONDITIONINVALID string = "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID"
	// LimitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSORDERALREADYEXISTS captures enum value "TRAILING_STOP_LOSS_ORDER_ALREADY_EXISTS"
	LimitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSORDERALREADYEXISTS string = "TRAILING_STOP_LOSS_ORDER_ALREADY_EXISTS"
	// LimitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLPRICEDISTANCEMISSING captures enum value "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MISSING"
	LimitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLPRICEDISTANCEMISSING string = "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MISSING"
	// LimitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLPRICEDISTANCEINVALID captures enum value "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_INVALID"
	LimitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLPRICEDISTANCEINVALID string = "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_INVALID"
	// LimitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLPRICEDISTANCEPRECISIONEXCEEDED captures enum value "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_PRECISION_EXCEEDED"
	LimitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLPRICEDISTANCEPRECISIONEXCEEDED string = "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_PRECISION_EXCEEDED"
	// LimitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLPRICEDISTANCEMAXIMUMEXCEEDED captures enum value "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED"
	LimitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLPRICEDISTANCEMAXIMUMEXCEEDED string = "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED"
	// LimitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLPRICEDISTANCEMINIMUMNOTMET captures enum value "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MINIMUM_NOT_MET"
	LimitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLPRICEDISTANCEMINIMUMNOTMET string = "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MINIMUM_NOT_MET"
	// LimitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLTIMEINFORCEMISSING captures enum value "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING"
	LimitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLTIMEINFORCEMISSING string = "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING"
	// LimitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLTIMEINFORCEINVALID captures enum value "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID"
	LimitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLTIMEINFORCEINVALID string = "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID"
	// LimitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLGTDTIMESTAMPMISSING captures enum value "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING"
	LimitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLGTDTIMESTAMPMISSING string = "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING"
	// LimitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLGTDTIMESTAMPINPAST captures enum value "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST"
	LimitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLGTDTIMESTAMPINPAST string = "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST"
	// LimitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLCLIENTORDERIDINVALID captures enum value "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID"
	LimitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLCLIENTORDERIDINVALID string = "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID"
	// LimitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLCLIENTORDERTAGINVALID captures enum value "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID"
	LimitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLCLIENTORDERTAGINVALID string = "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID"
	// LimitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLCLIENTORDERCOMMENTINVALID captures enum value "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID"
	LimitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLCLIENTORDERCOMMENTINVALID string = "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID"
	// LimitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSORDERSNOTSUPPORTED captures enum value "TRAILING_STOP_LOSS_ORDERS_NOT_SUPPORTED"
	LimitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSORDERSNOTSUPPORTED string = "TRAILING_STOP_LOSS_ORDERS_NOT_SUPPORTED"
	// LimitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLTRIGGERCONDITIONMISSING captures enum value "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING"
	LimitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLTRIGGERCONDITIONMISSING string = "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING"
	// LimitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLTRIGGERCONDITIONINVALID captures enum value "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID"
	LimitOrderRejectTransactionRejectReasonTRAILINGSTOPLOSSONFILLTRIGGERCONDITIONINVALID string = "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID"
	// LimitOrderRejectTransactionRejectReasonCLOSETRADETYPEMISSING captures enum value "CLOSE_TRADE_TYPE_MISSING"
	LimitOrderRejectTransactionRejectReasonCLOSETRADETYPEMISSING string = "CLOSE_TRADE_TYPE_MISSING"
	// LimitOrderRejectTransactionRejectReasonCLOSETRADEPARTIALUNITSMISSING captures enum value "CLOSE_TRADE_PARTIAL_UNITS_MISSING"
	LimitOrderRejectTransactionRejectReasonCLOSETRADEPARTIALUNITSMISSING string = "CLOSE_TRADE_PARTIAL_UNITS_MISSING"
	// LimitOrderRejectTransactionRejectReasonCLOSETRADEUNITSEXCEEDTRADESIZE captures enum value "CLOSE_TRADE_UNITS_EXCEED_TRADE_SIZE"
	LimitOrderRejectTransactionRejectReasonCLOSETRADEUNITSEXCEEDTRADESIZE string = "CLOSE_TRADE_UNITS_EXCEED_TRADE_SIZE"
	// LimitOrderRejectTransactionRejectReasonCLOSEOUTPOSITIONDOESNTEXIST captures enum value "CLOSEOUT_POSITION_DOESNT_EXIST"
	LimitOrderRejectTransactionRejectReasonCLOSEOUTPOSITIONDOESNTEXIST string = "CLOSEOUT_POSITION_DOESNT_EXIST"
	// LimitOrderRejectTransactionRejectReasonCLOSEOUTPOSITIONINCOMPLETESPECIFICATION captures enum value "CLOSEOUT_POSITION_INCOMPLETE_SPECIFICATION"
	LimitOrderRejectTransactionRejectReasonCLOSEOUTPOSITIONINCOMPLETESPECIFICATION string = "CLOSEOUT_POSITION_INCOMPLETE_SPECIFICATION"
	// LimitOrderRejectTransactionRejectReasonCLOSEOUTPOSITIONUNITSEXCEEDPOSITIONSIZE captures enum value "CLOSEOUT_POSITION_UNITS_EXCEED_POSITION_SIZE"
	LimitOrderRejectTransactionRejectReasonCLOSEOUTPOSITIONUNITSEXCEEDPOSITIONSIZE string = "CLOSEOUT_POSITION_UNITS_EXCEED_POSITION_SIZE"
	// LimitOrderRejectTransactionRejectReasonCLOSEOUTPOSITIONREJECT captures enum value "CLOSEOUT_POSITION_REJECT"
	LimitOrderRejectTransactionRejectReasonCLOSEOUTPOSITIONREJECT string = "CLOSEOUT_POSITION_REJECT"
	// LimitOrderRejectTransactionRejectReasonCLOSEOUTPOSITIONPARTIALUNITSMISSING captures enum value "CLOSEOUT_POSITION_PARTIAL_UNITS_MISSING"
	LimitOrderRejectTransactionRejectReasonCLOSEOUTPOSITIONPARTIALUNITSMISSING string = "CLOSEOUT_POSITION_PARTIAL_UNITS_MISSING"
	// LimitOrderRejectTransactionRejectReasonMARKUPGROUPIDINVALID captures enum value "MARKUP_GROUP_ID_INVALID"
	LimitOrderRejectTransactionRejectReasonMARKUPGROUPIDINVALID string = "MARKUP_GROUP_ID_INVALID"
	// LimitOrderRejectTransactionRejectReasonPOSITIONAGGREGATIONMODEINVALID captures enum value "POSITION_AGGREGATION_MODE_INVALID"
	LimitOrderRejectTransactionRejectReasonPOSITIONAGGREGATIONMODEINVALID string = "POSITION_AGGREGATION_MODE_INVALID"
	// LimitOrderRejectTransactionRejectReasonADMINCONFIGUREDATAMISSING captures enum value "ADMIN_CONFIGURE_DATA_MISSING"
	LimitOrderRejectTransactionRejectReasonADMINCONFIGUREDATAMISSING string = "ADMIN_CONFIGURE_DATA_MISSING"
	// LimitOrderRejectTransactionRejectReasonMARGINRATEINVALID captures enum value "MARGIN_RATE_INVALID"
	LimitOrderRejectTransactionRejectReasonMARGINRATEINVALID string = "MARGIN_RATE_INVALID"
	// LimitOrderRejectTransactionRejectReasonMARGINRATEWOULDTRIGGERCLOSEOUT captures enum value "MARGIN_RATE_WOULD_TRIGGER_CLOSEOUT"
	LimitOrderRejectTransactionRejectReasonMARGINRATEWOULDTRIGGERCLOSEOUT string = "MARGIN_RATE_WOULD_TRIGGER_CLOSEOUT"
	// LimitOrderRejectTransactionRejectReasonALIASINVALID captures enum value "ALIAS_INVALID"
	LimitOrderRejectTransactionRejectReasonALIASINVALID string = "ALIAS_INVALID"
	// LimitOrderRejectTransactionRejectReasonCLIENTCONFIGUREDATAMISSING captures enum value "CLIENT_CONFIGURE_DATA_MISSING"
	LimitOrderRejectTransactionRejectReasonCLIENTCONFIGUREDATAMISSING string = "CLIENT_CONFIGURE_DATA_MISSING"
	// LimitOrderRejectTransactionRejectReasonMARGINRATEWOULDTRIGGERMARGINCALL captures enum value "MARGIN_RATE_WOULD_TRIGGER_MARGIN_CALL"
	LimitOrderRejectTransactionRejectReasonMARGINRATEWOULDTRIGGERMARGINCALL string = "MARGIN_RATE_WOULD_TRIGGER_MARGIN_CALL"
	// LimitOrderRejectTransactionRejectReasonAMOUNTINVALID captures enum value "AMOUNT_INVALID"
	LimitOrderRejectTransactionRejectReasonAMOUNTINVALID string = "AMOUNT_INVALID"
	// LimitOrderRejectTransactionRejectReasonINSUFFICIENTFUNDS captures enum value "INSUFFICIENT_FUNDS"
	LimitOrderRejectTransactionRejectReasonINSUFFICIENTFUNDS string = "INSUFFICIENT_FUNDS"
	// LimitOrderRejectTransactionRejectReasonAMOUNTMISSING captures enum value "AMOUNT_MISSING"
	LimitOrderRejectTransactionRejectReasonAMOUNTMISSING string = "AMOUNT_MISSING"
	// LimitOrderRejectTransactionRejectReasonFUNDINGREASONMISSING captures enum value "FUNDING_REASON_MISSING"
	LimitOrderRejectTransactionRejectReasonFUNDINGREASONMISSING string = "FUNDING_REASON_MISSING"
	// LimitOrderRejectTransactionRejectReasonCLIENTEXTENSIONSDATAMISSING captures enum value "CLIENT_EXTENSIONS_DATA_MISSING"
	LimitOrderRejectTransactionRejectReasonCLIENTEXTENSIONSDATAMISSING string = "CLIENT_EXTENSIONS_DATA_MISSING"
	// LimitOrderRejectTransactionRejectReasonREPLACINGORDERINVALID captures enum value "REPLACING_ORDER_INVALID"
	LimitOrderRejectTransactionRejectReasonREPLACINGORDERINVALID string = "REPLACING_ORDER_INVALID"
	// LimitOrderRejectTransactionRejectReasonREPLACINGTRADEIDINVALID captures enum value "REPLACING_TRADE_ID_INVALID"
	LimitOrderRejectTransactionRejectReasonREPLACINGTRADEIDINVALID string = "REPLACING_TRADE_ID_INVALID"
)

// prop value enum
func (m *LimitOrderRejectTransaction) validateRejectReasonEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, limitOrderRejectTransactionTypeRejectReasonPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *LimitOrderRejectTransaction) validateRejectReason(formats strfmt.Registry) error {

	if swag.IsZero(m.RejectReason) { // not required
		return nil
	}

	// value enum
	if err := m.validateRejectReasonEnum("rejectReason", "body", m.RejectReason); err != nil {
		return err
	}

	return nil
}

func (m *LimitOrderRejectTransaction) validateStopLossOnFill(formats strfmt.Registry) error {

	if swag.IsZero(m.StopLossOnFill) { // not required
		return nil
	}

	if m.StopLossOnFill != nil {

		if err := m.StopLossOnFill.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("stopLossOnFill")
			}
			return err
		}
	}

	return nil
}

func (m *LimitOrderRejectTransaction) validateTakeProfitOnFill(formats strfmt.Registry) error {

	if swag.IsZero(m.TakeProfitOnFill) { // not required
		return nil
	}

	if m.TakeProfitOnFill != nil {

		if err := m.TakeProfitOnFill.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("takeProfitOnFill")
			}
			return err
		}
	}

	return nil
}

var limitOrderRejectTransactionTypeTimeInForcePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["GTC","GTD","GFD","FOK","IOC"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		limitOrderRejectTransactionTypeTimeInForcePropEnum = append(limitOrderRejectTransactionTypeTimeInForcePropEnum, v)
	}
}

const (
	// LimitOrderRejectTransactionTimeInForceGTC captures enum value "GTC"
	LimitOrderRejectTransactionTimeInForceGTC string = "GTC"
	// LimitOrderRejectTransactionTimeInForceGTD captures enum value "GTD"
	LimitOrderRejectTransactionTimeInForceGTD string = "GTD"
	// LimitOrderRejectTransactionTimeInForceGFD captures enum value "GFD"
	LimitOrderRejectTransactionTimeInForceGFD string = "GFD"
	// LimitOrderRejectTransactionTimeInForceFOK captures enum value "FOK"
	LimitOrderRejectTransactionTimeInForceFOK string = "FOK"
	// LimitOrderRejectTransactionTimeInForceIOC captures enum value "IOC"
	LimitOrderRejectTransactionTimeInForceIOC string = "IOC"
)

// prop value enum
func (m *LimitOrderRejectTransaction) validateTimeInForceEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, limitOrderRejectTransactionTypeTimeInForcePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *LimitOrderRejectTransaction) validateTimeInForce(formats strfmt.Registry) error {

	if swag.IsZero(m.TimeInForce) { // not required
		return nil
	}

	// value enum
	if err := m.validateTimeInForceEnum("timeInForce", "body", m.TimeInForce); err != nil {
		return err
	}

	return nil
}

func (m *LimitOrderRejectTransaction) validateTradeClientExtensions(formats strfmt.Registry) error {

	if swag.IsZero(m.TradeClientExtensions) { // not required
		return nil
	}

	if m.TradeClientExtensions != nil {

		if err := m.TradeClientExtensions.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("tradeClientExtensions")
			}
			return err
		}
	}

	return nil
}

func (m *LimitOrderRejectTransaction) validateTrailingStopLossOnFill(formats strfmt.Registry) error {

	if swag.IsZero(m.TrailingStopLossOnFill) { // not required
		return nil
	}

	if m.TrailingStopLossOnFill != nil {

		if err := m.TrailingStopLossOnFill.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("trailingStopLossOnFill")
			}
			return err
		}
	}

	return nil
}

var limitOrderRejectTransactionTypeTriggerConditionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["DEFAULT","INVERSE","BID","ASK","MID"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		limitOrderRejectTransactionTypeTriggerConditionPropEnum = append(limitOrderRejectTransactionTypeTriggerConditionPropEnum, v)
	}
}

const (
	// LimitOrderRejectTransactionTriggerConditionDEFAULT captures enum value "DEFAULT"
	LimitOrderRejectTransactionTriggerConditionDEFAULT string = "DEFAULT"
	// LimitOrderRejectTransactionTriggerConditionINVERSE captures enum value "INVERSE"
	LimitOrderRejectTransactionTriggerConditionINVERSE string = "INVERSE"
	// LimitOrderRejectTransactionTriggerConditionBID captures enum value "BID"
	LimitOrderRejectTransactionTriggerConditionBID string = "BID"
	// LimitOrderRejectTransactionTriggerConditionASK captures enum value "ASK"
	LimitOrderRejectTransactionTriggerConditionASK string = "ASK"
	// LimitOrderRejectTransactionTriggerConditionMID captures enum value "MID"
	LimitOrderRejectTransactionTriggerConditionMID string = "MID"
)

// prop value enum
func (m *LimitOrderRejectTransaction) validateTriggerConditionEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, limitOrderRejectTransactionTypeTriggerConditionPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *LimitOrderRejectTransaction) validateTriggerCondition(formats strfmt.Registry) error {

	if swag.IsZero(m.TriggerCondition) { // not required
		return nil
	}

	// value enum
	if err := m.validateTriggerConditionEnum("triggerCondition", "body", m.TriggerCondition); err != nil {
		return err
	}

	return nil
}

var limitOrderRejectTransactionTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["CREATE","CLOSE","REOPEN","CLIENT_CONFIGURE","CLIENT_CONFIGURE_REJECT","TRANSFER_FUNDS","TRANSFER_FUNDS_REJECT","MARKET_ORDER","MARKET_ORDER_REJECT","LIMIT_ORDER","LIMIT_ORDER_REJECT","STOP_ORDER","STOP_ORDER_REJECT","MARKET_IF_TOUCHED_ORDER","MARKET_IF_TOUCHED_ORDER_REJECT","TAKE_PROFIT_ORDER","TAKE_PROFIT_ORDER_REJECT","STOP_LOSS_ORDER","STOP_LOSS_ORDER_REJECT","TRAILING_STOP_LOSS_ORDER","TRAILING_STOP_LOSS_ORDER_REJECT","ORDER_FILL","ORDER_CANCEL","ORDER_CANCEL_REJECT","ORDER_CLIENT_EXTENSIONS_MODIFY","ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT","TRADE_CLIENT_EXTENSIONS_MODIFY","TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT","MARGIN_CALL_ENTER","MARGIN_CALL_EXTEND","MARGIN_CALL_EXIT","DELAYED_TRADE_CLOSURE","DAILY_FINANCING","RESET_RESETTABLE_PL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		limitOrderRejectTransactionTypeTypePropEnum = append(limitOrderRejectTransactionTypeTypePropEnum, v)
	}
}

const (
	// LimitOrderRejectTransactionTypeCREATE captures enum value "CREATE"
	LimitOrderRejectTransactionTypeCREATE string = "CREATE"
	// LimitOrderRejectTransactionTypeCLOSE captures enum value "CLOSE"
	LimitOrderRejectTransactionTypeCLOSE string = "CLOSE"
	// LimitOrderRejectTransactionTypeREOPEN captures enum value "REOPEN"
	LimitOrderRejectTransactionTypeREOPEN string = "REOPEN"
	// LimitOrderRejectTransactionTypeCLIENTCONFIGURE captures enum value "CLIENT_CONFIGURE"
	LimitOrderRejectTransactionTypeCLIENTCONFIGURE string = "CLIENT_CONFIGURE"
	// LimitOrderRejectTransactionTypeCLIENTCONFIGUREREJECT captures enum value "CLIENT_CONFIGURE_REJECT"
	LimitOrderRejectTransactionTypeCLIENTCONFIGUREREJECT string = "CLIENT_CONFIGURE_REJECT"
	// LimitOrderRejectTransactionTypeTRANSFERFUNDS captures enum value "TRANSFER_FUNDS"
	LimitOrderRejectTransactionTypeTRANSFERFUNDS string = "TRANSFER_FUNDS"
	// LimitOrderRejectTransactionTypeTRANSFERFUNDSREJECT captures enum value "TRANSFER_FUNDS_REJECT"
	LimitOrderRejectTransactionTypeTRANSFERFUNDSREJECT string = "TRANSFER_FUNDS_REJECT"
	// LimitOrderRejectTransactionTypeMARKETORDER captures enum value "MARKET_ORDER"
	LimitOrderRejectTransactionTypeMARKETORDER string = "MARKET_ORDER"
	// LimitOrderRejectTransactionTypeMARKETORDERREJECT captures enum value "MARKET_ORDER_REJECT"
	LimitOrderRejectTransactionTypeMARKETORDERREJECT string = "MARKET_ORDER_REJECT"
	// LimitOrderRejectTransactionTypeLIMITORDER captures enum value "LIMIT_ORDER"
	LimitOrderRejectTransactionTypeLIMITORDER string = "LIMIT_ORDER"
	// LimitOrderRejectTransactionTypeLIMITORDERREJECT captures enum value "LIMIT_ORDER_REJECT"
	LimitOrderRejectTransactionTypeLIMITORDERREJECT string = "LIMIT_ORDER_REJECT"
	// LimitOrderRejectTransactionTypeSTOPORDER captures enum value "STOP_ORDER"
	LimitOrderRejectTransactionTypeSTOPORDER string = "STOP_ORDER"
	// LimitOrderRejectTransactionTypeSTOPORDERREJECT captures enum value "STOP_ORDER_REJECT"
	LimitOrderRejectTransactionTypeSTOPORDERREJECT string = "STOP_ORDER_REJECT"
	// LimitOrderRejectTransactionTypeMARKETIFTOUCHEDORDER captures enum value "MARKET_IF_TOUCHED_ORDER"
	LimitOrderRejectTransactionTypeMARKETIFTOUCHEDORDER string = "MARKET_IF_TOUCHED_ORDER"
	// LimitOrderRejectTransactionTypeMARKETIFTOUCHEDORDERREJECT captures enum value "MARKET_IF_TOUCHED_ORDER_REJECT"
	LimitOrderRejectTransactionTypeMARKETIFTOUCHEDORDERREJECT string = "MARKET_IF_TOUCHED_ORDER_REJECT"
	// LimitOrderRejectTransactionTypeTAKEPROFITORDER captures enum value "TAKE_PROFIT_ORDER"
	LimitOrderRejectTransactionTypeTAKEPROFITORDER string = "TAKE_PROFIT_ORDER"
	// LimitOrderRejectTransactionTypeTAKEPROFITORDERREJECT captures enum value "TAKE_PROFIT_ORDER_REJECT"
	LimitOrderRejectTransactionTypeTAKEPROFITORDERREJECT string = "TAKE_PROFIT_ORDER_REJECT"
	// LimitOrderRejectTransactionTypeSTOPLOSSORDER captures enum value "STOP_LOSS_ORDER"
	LimitOrderRejectTransactionTypeSTOPLOSSORDER string = "STOP_LOSS_ORDER"
	// LimitOrderRejectTransactionTypeSTOPLOSSORDERREJECT captures enum value "STOP_LOSS_ORDER_REJECT"
	LimitOrderRejectTransactionTypeSTOPLOSSORDERREJECT string = "STOP_LOSS_ORDER_REJECT"
	// LimitOrderRejectTransactionTypeTRAILINGSTOPLOSSORDER captures enum value "TRAILING_STOP_LOSS_ORDER"
	LimitOrderRejectTransactionTypeTRAILINGSTOPLOSSORDER string = "TRAILING_STOP_LOSS_ORDER"
	// LimitOrderRejectTransactionTypeTRAILINGSTOPLOSSORDERREJECT captures enum value "TRAILING_STOP_LOSS_ORDER_REJECT"
	LimitOrderRejectTransactionTypeTRAILINGSTOPLOSSORDERREJECT string = "TRAILING_STOP_LOSS_ORDER_REJECT"
	// LimitOrderRejectTransactionTypeORDERFILL captures enum value "ORDER_FILL"
	LimitOrderRejectTransactionTypeORDERFILL string = "ORDER_FILL"
	// LimitOrderRejectTransactionTypeORDERCANCEL captures enum value "ORDER_CANCEL"
	LimitOrderRejectTransactionTypeORDERCANCEL string = "ORDER_CANCEL"
	// LimitOrderRejectTransactionTypeORDERCANCELREJECT captures enum value "ORDER_CANCEL_REJECT"
	LimitOrderRejectTransactionTypeORDERCANCELREJECT string = "ORDER_CANCEL_REJECT"
	// LimitOrderRejectTransactionTypeORDERCLIENTEXTENSIONSMODIFY captures enum value "ORDER_CLIENT_EXTENSIONS_MODIFY"
	LimitOrderRejectTransactionTypeORDERCLIENTEXTENSIONSMODIFY string = "ORDER_CLIENT_EXTENSIONS_MODIFY"
	// LimitOrderRejectTransactionTypeORDERCLIENTEXTENSIONSMODIFYREJECT captures enum value "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT"
	LimitOrderRejectTransactionTypeORDERCLIENTEXTENSIONSMODIFYREJECT string = "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT"
	// LimitOrderRejectTransactionTypeTRADECLIENTEXTENSIONSMODIFY captures enum value "TRADE_CLIENT_EXTENSIONS_MODIFY"
	LimitOrderRejectTransactionTypeTRADECLIENTEXTENSIONSMODIFY string = "TRADE_CLIENT_EXTENSIONS_MODIFY"
	// LimitOrderRejectTransactionTypeTRADECLIENTEXTENSIONSMODIFYREJECT captures enum value "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT"
	LimitOrderRejectTransactionTypeTRADECLIENTEXTENSIONSMODIFYREJECT string = "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT"
	// LimitOrderRejectTransactionTypeMARGINCALLENTER captures enum value "MARGIN_CALL_ENTER"
	LimitOrderRejectTransactionTypeMARGINCALLENTER string = "MARGIN_CALL_ENTER"
	// LimitOrderRejectTransactionTypeMARGINCALLEXTEND captures enum value "MARGIN_CALL_EXTEND"
	LimitOrderRejectTransactionTypeMARGINCALLEXTEND string = "MARGIN_CALL_EXTEND"
	// LimitOrderRejectTransactionTypeMARGINCALLEXIT captures enum value "MARGIN_CALL_EXIT"
	LimitOrderRejectTransactionTypeMARGINCALLEXIT string = "MARGIN_CALL_EXIT"
	// LimitOrderRejectTransactionTypeDELAYEDTRADECLOSURE captures enum value "DELAYED_TRADE_CLOSURE"
	LimitOrderRejectTransactionTypeDELAYEDTRADECLOSURE string = "DELAYED_TRADE_CLOSURE"
	// LimitOrderRejectTransactionTypeDAILYFINANCING captures enum value "DAILY_FINANCING"
	LimitOrderRejectTransactionTypeDAILYFINANCING string = "DAILY_FINANCING"
	// LimitOrderRejectTransactionTypeRESETRESETTABLEPL captures enum value "RESET_RESETTABLE_PL"
	LimitOrderRejectTransactionTypeRESETRESETTABLEPL string = "RESET_RESETTABLE_PL"
)

// prop value enum
func (m *LimitOrderRejectTransaction) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, limitOrderRejectTransactionTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *LimitOrderRejectTransaction) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LimitOrderRejectTransaction) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LimitOrderRejectTransaction) UnmarshalBinary(b []byte) error {
	var res LimitOrderRejectTransaction
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
