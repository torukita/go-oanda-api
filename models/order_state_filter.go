// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// OrderStateFilter The state to filter the requested Orders by.
// swagger:model OrderStateFilter
type OrderStateFilter string

const (
	// OrderStateFilterPENDING captures enum value "PENDING"
	OrderStateFilterPENDING OrderStateFilter = "PENDING"
	// OrderStateFilterFILLED captures enum value "FILLED"
	OrderStateFilterFILLED OrderStateFilter = "FILLED"
	// OrderStateFilterTRIGGERED captures enum value "TRIGGERED"
	OrderStateFilterTRIGGERED OrderStateFilter = "TRIGGERED"
	// OrderStateFilterCANCELLED captures enum value "CANCELLED"
	OrderStateFilterCANCELLED OrderStateFilter = "CANCELLED"
	// OrderStateFilterALL captures enum value "ALL"
	OrderStateFilterALL OrderStateFilter = "ALL"
)

// for schema
var orderStateFilterEnum []interface{}

func init() {
	var res []OrderStateFilter
	if err := json.Unmarshal([]byte(`["PENDING","FILLED","TRIGGERED","CANCELLED","ALL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		orderStateFilterEnum = append(orderStateFilterEnum, v)
	}
}

func (m OrderStateFilter) validateOrderStateFilterEnum(path, location string, value OrderStateFilter) error {
	if err := validate.Enum(path, location, value, orderStateFilterEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this order state filter
func (m OrderStateFilter) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateOrderStateFilterEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
