// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// OrderTriggerCondition Specification of what component of a price should be used for comparison when determining if the Order should be filled.
// swagger:model OrderTriggerCondition
type OrderTriggerCondition string

const (
	// OrderTriggerConditionDEFAULT captures enum value "DEFAULT"
	OrderTriggerConditionDEFAULT OrderTriggerCondition = "DEFAULT"
	// OrderTriggerConditionINVERSE captures enum value "INVERSE"
	OrderTriggerConditionINVERSE OrderTriggerCondition = "INVERSE"
	// OrderTriggerConditionBID captures enum value "BID"
	OrderTriggerConditionBID OrderTriggerCondition = "BID"
	// OrderTriggerConditionASK captures enum value "ASK"
	OrderTriggerConditionASK OrderTriggerCondition = "ASK"
	// OrderTriggerConditionMID captures enum value "MID"
	OrderTriggerConditionMID OrderTriggerCondition = "MID"
)

// for schema
var orderTriggerConditionEnum []interface{}

func init() {
	var res []OrderTriggerCondition
	if err := json.Unmarshal([]byte(`["DEFAULT","INVERSE","BID","ASK","MID"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		orderTriggerConditionEnum = append(orderTriggerConditionEnum, v)
	}
}

func (m OrderTriggerCondition) validateOrderTriggerConditionEnum(path, location string, value OrderTriggerCondition) error {
	if err := validate.Enum(path, location, value, orderTriggerConditionEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this order trigger condition
func (m OrderTriggerCondition) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateOrderTriggerConditionEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
