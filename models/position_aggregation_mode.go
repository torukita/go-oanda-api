// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// PositionAggregationMode The way that position values for an Account are calculated and aggregated.
// swagger:model PositionAggregationMode
type PositionAggregationMode string

const (
	// PositionAggregationModeABSOLUTESUM captures enum value "ABSOLUTE_SUM"
	PositionAggregationModeABSOLUTESUM PositionAggregationMode = "ABSOLUTE_SUM"
	// PositionAggregationModeMAXIMALSIDE captures enum value "MAXIMAL_SIDE"
	PositionAggregationModeMAXIMALSIDE PositionAggregationMode = "MAXIMAL_SIDE"
	// PositionAggregationModeNETSUM captures enum value "NET_SUM"
	PositionAggregationModeNETSUM PositionAggregationMode = "NET_SUM"
)

// for schema
var positionAggregationModeEnum []interface{}

func init() {
	var res []PositionAggregationMode
	if err := json.Unmarshal([]byte(`["ABSOLUTE_SUM","MAXIMAL_SIDE","NET_SUM"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		positionAggregationModeEnum = append(positionAggregationModeEnum, v)
	}
}

func (m PositionAggregationMode) validatePositionAggregationModeEnum(path, location string, value PositionAggregationMode) error {
	if err := validate.Enum(path, location, value, positionAggregationModeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this position aggregation mode
func (m PositionAggregationMode) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validatePositionAggregationModeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
