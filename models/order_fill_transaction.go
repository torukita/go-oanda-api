// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OrderFillTransaction An OrderFillTransaction represents the filling of an Order in the client's Account.
// swagger:model OrderFillTransaction
type OrderFillTransaction struct {

	// The Account's balance after the Order was filled.
	AccountBalance string `json:"accountBalance,omitempty"`

	// The ID of the Account the Transaction was created for.
	AccountID string `json:"accountID,omitempty"`

	// The ID of the "batch" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.
	BatchID string `json:"batchID,omitempty"`

	// The client Order ID of the Order filled (only provided if the client has assigned one).
	ClientOrderID string `json:"clientOrderID,omitempty"`

	// The commission charged in the Account's home currency as a result of filling the Order. The commission is always represented as a positive quantity of the Account's home currency, however it reduces the balance in the Account.
	Commission string `json:"commission,omitempty"`

	// The financing paid or collected when the Order was filled.
	Financing string `json:"financing,omitempty"`

	// full price
	FullPrice *ClientPrice `json:"fullPrice,omitempty"`

	// The Transaction's Identifier.
	ID string `json:"id,omitempty"`

	// The name of the filled Order's instrument.
	Instrument string `json:"instrument,omitempty"`

	// The ID of the Order filled.
	OrderID string `json:"orderID,omitempty"`

	// The profit or loss incurred when the Order was filled.
	Pl string `json:"pl,omitempty"`

	// The average market price that the Order was filled at.
	Price string `json:"price,omitempty"`

	// The reason that an Order was filled
	Reason string `json:"reason,omitempty"`

	// The Request ID of the request which generated the transaction.
	RequestID string `json:"requestID,omitempty"`

	// The date/time when the Transaction was created.
	Time string `json:"time,omitempty"`

	// trade opened
	TradeOpened *TradeOpen `json:"tradeOpened,omitempty"`

	// trade reduced
	TradeReduced *TradeReduce `json:"tradeReduced,omitempty"`

	// trades closed
	TradesClosed OrderFillTransactionTradesClosed `json:"tradesClosed"`

	// The Type of the Transaction. Always set to "ORDER_FILL" for an OrderFillTransaction.
	Type string `json:"type,omitempty"`

	// The number of units filled by the Order.
	Units string `json:"units,omitempty"`

	// The ID of the user that initiated the creation of the Transaction.
	UserID int64 `json:"userID,omitempty"`
}

// Validate validates this order fill transaction
func (m *OrderFillTransaction) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFullPrice(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateReason(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTradeOpened(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTradeReduced(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OrderFillTransaction) validateFullPrice(formats strfmt.Registry) error {

	if swag.IsZero(m.FullPrice) { // not required
		return nil
	}

	if m.FullPrice != nil {

		if err := m.FullPrice.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("fullPrice")
			}
			return err
		}
	}

	return nil
}

var orderFillTransactionTypeReasonPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["LIMIT_ORDER","STOP_ORDER","MARKET_IF_TOUCHED_ORDER","TAKE_PROFIT_ORDER","STOP_LOSS_ORDER","TRAILING_STOP_LOSS_ORDER","MARKET_ORDER","MARKET_ORDER_TRADE_CLOSE","MARKET_ORDER_POSITION_CLOSEOUT","MARKET_ORDER_MARGIN_CLOSEOUT","MARKET_ORDER_DELAYED_TRADE_CLOSE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		orderFillTransactionTypeReasonPropEnum = append(orderFillTransactionTypeReasonPropEnum, v)
	}
}

const (
	// OrderFillTransactionReasonLIMITORDER captures enum value "LIMIT_ORDER"
	OrderFillTransactionReasonLIMITORDER string = "LIMIT_ORDER"
	// OrderFillTransactionReasonSTOPORDER captures enum value "STOP_ORDER"
	OrderFillTransactionReasonSTOPORDER string = "STOP_ORDER"
	// OrderFillTransactionReasonMARKETIFTOUCHEDORDER captures enum value "MARKET_IF_TOUCHED_ORDER"
	OrderFillTransactionReasonMARKETIFTOUCHEDORDER string = "MARKET_IF_TOUCHED_ORDER"
	// OrderFillTransactionReasonTAKEPROFITORDER captures enum value "TAKE_PROFIT_ORDER"
	OrderFillTransactionReasonTAKEPROFITORDER string = "TAKE_PROFIT_ORDER"
	// OrderFillTransactionReasonSTOPLOSSORDER captures enum value "STOP_LOSS_ORDER"
	OrderFillTransactionReasonSTOPLOSSORDER string = "STOP_LOSS_ORDER"
	// OrderFillTransactionReasonTRAILINGSTOPLOSSORDER captures enum value "TRAILING_STOP_LOSS_ORDER"
	OrderFillTransactionReasonTRAILINGSTOPLOSSORDER string = "TRAILING_STOP_LOSS_ORDER"
	// OrderFillTransactionReasonMARKETORDER captures enum value "MARKET_ORDER"
	OrderFillTransactionReasonMARKETORDER string = "MARKET_ORDER"
	// OrderFillTransactionReasonMARKETORDERTRADECLOSE captures enum value "MARKET_ORDER_TRADE_CLOSE"
	OrderFillTransactionReasonMARKETORDERTRADECLOSE string = "MARKET_ORDER_TRADE_CLOSE"
	// OrderFillTransactionReasonMARKETORDERPOSITIONCLOSEOUT captures enum value "MARKET_ORDER_POSITION_CLOSEOUT"
	OrderFillTransactionReasonMARKETORDERPOSITIONCLOSEOUT string = "MARKET_ORDER_POSITION_CLOSEOUT"
	// OrderFillTransactionReasonMARKETORDERMARGINCLOSEOUT captures enum value "MARKET_ORDER_MARGIN_CLOSEOUT"
	OrderFillTransactionReasonMARKETORDERMARGINCLOSEOUT string = "MARKET_ORDER_MARGIN_CLOSEOUT"
	// OrderFillTransactionReasonMARKETORDERDELAYEDTRADECLOSE captures enum value "MARKET_ORDER_DELAYED_TRADE_CLOSE"
	OrderFillTransactionReasonMARKETORDERDELAYEDTRADECLOSE string = "MARKET_ORDER_DELAYED_TRADE_CLOSE"
)

// prop value enum
func (m *OrderFillTransaction) validateReasonEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, orderFillTransactionTypeReasonPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OrderFillTransaction) validateReason(formats strfmt.Registry) error {

	if swag.IsZero(m.Reason) { // not required
		return nil
	}

	// value enum
	if err := m.validateReasonEnum("reason", "body", m.Reason); err != nil {
		return err
	}

	return nil
}

func (m *OrderFillTransaction) validateTradeOpened(formats strfmt.Registry) error {

	if swag.IsZero(m.TradeOpened) { // not required
		return nil
	}

	if m.TradeOpened != nil {

		if err := m.TradeOpened.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("tradeOpened")
			}
			return err
		}
	}

	return nil
}

func (m *OrderFillTransaction) validateTradeReduced(formats strfmt.Registry) error {

	if swag.IsZero(m.TradeReduced) { // not required
		return nil
	}

	if m.TradeReduced != nil {

		if err := m.TradeReduced.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("tradeReduced")
			}
			return err
		}
	}

	return nil
}

var orderFillTransactionTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["CREATE","CLOSE","REOPEN","CLIENT_CONFIGURE","CLIENT_CONFIGURE_REJECT","TRANSFER_FUNDS","TRANSFER_FUNDS_REJECT","MARKET_ORDER","MARKET_ORDER_REJECT","LIMIT_ORDER","LIMIT_ORDER_REJECT","STOP_ORDER","STOP_ORDER_REJECT","MARKET_IF_TOUCHED_ORDER","MARKET_IF_TOUCHED_ORDER_REJECT","TAKE_PROFIT_ORDER","TAKE_PROFIT_ORDER_REJECT","STOP_LOSS_ORDER","STOP_LOSS_ORDER_REJECT","TRAILING_STOP_LOSS_ORDER","TRAILING_STOP_LOSS_ORDER_REJECT","ORDER_FILL","ORDER_CANCEL","ORDER_CANCEL_REJECT","ORDER_CLIENT_EXTENSIONS_MODIFY","ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT","TRADE_CLIENT_EXTENSIONS_MODIFY","TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT","MARGIN_CALL_ENTER","MARGIN_CALL_EXTEND","MARGIN_CALL_EXIT","DELAYED_TRADE_CLOSURE","DAILY_FINANCING","RESET_RESETTABLE_PL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		orderFillTransactionTypeTypePropEnum = append(orderFillTransactionTypeTypePropEnum, v)
	}
}

const (
	// OrderFillTransactionTypeCREATE captures enum value "CREATE"
	OrderFillTransactionTypeCREATE string = "CREATE"
	// OrderFillTransactionTypeCLOSE captures enum value "CLOSE"
	OrderFillTransactionTypeCLOSE string = "CLOSE"
	// OrderFillTransactionTypeREOPEN captures enum value "REOPEN"
	OrderFillTransactionTypeREOPEN string = "REOPEN"
	// OrderFillTransactionTypeCLIENTCONFIGURE captures enum value "CLIENT_CONFIGURE"
	OrderFillTransactionTypeCLIENTCONFIGURE string = "CLIENT_CONFIGURE"
	// OrderFillTransactionTypeCLIENTCONFIGUREREJECT captures enum value "CLIENT_CONFIGURE_REJECT"
	OrderFillTransactionTypeCLIENTCONFIGUREREJECT string = "CLIENT_CONFIGURE_REJECT"
	// OrderFillTransactionTypeTRANSFERFUNDS captures enum value "TRANSFER_FUNDS"
	OrderFillTransactionTypeTRANSFERFUNDS string = "TRANSFER_FUNDS"
	// OrderFillTransactionTypeTRANSFERFUNDSREJECT captures enum value "TRANSFER_FUNDS_REJECT"
	OrderFillTransactionTypeTRANSFERFUNDSREJECT string = "TRANSFER_FUNDS_REJECT"
	// OrderFillTransactionTypeMARKETORDER captures enum value "MARKET_ORDER"
	OrderFillTransactionTypeMARKETORDER string = "MARKET_ORDER"
	// OrderFillTransactionTypeMARKETORDERREJECT captures enum value "MARKET_ORDER_REJECT"
	OrderFillTransactionTypeMARKETORDERREJECT string = "MARKET_ORDER_REJECT"
	// OrderFillTransactionTypeLIMITORDER captures enum value "LIMIT_ORDER"
	OrderFillTransactionTypeLIMITORDER string = "LIMIT_ORDER"
	// OrderFillTransactionTypeLIMITORDERREJECT captures enum value "LIMIT_ORDER_REJECT"
	OrderFillTransactionTypeLIMITORDERREJECT string = "LIMIT_ORDER_REJECT"
	// OrderFillTransactionTypeSTOPORDER captures enum value "STOP_ORDER"
	OrderFillTransactionTypeSTOPORDER string = "STOP_ORDER"
	// OrderFillTransactionTypeSTOPORDERREJECT captures enum value "STOP_ORDER_REJECT"
	OrderFillTransactionTypeSTOPORDERREJECT string = "STOP_ORDER_REJECT"
	// OrderFillTransactionTypeMARKETIFTOUCHEDORDER captures enum value "MARKET_IF_TOUCHED_ORDER"
	OrderFillTransactionTypeMARKETIFTOUCHEDORDER string = "MARKET_IF_TOUCHED_ORDER"
	// OrderFillTransactionTypeMARKETIFTOUCHEDORDERREJECT captures enum value "MARKET_IF_TOUCHED_ORDER_REJECT"
	OrderFillTransactionTypeMARKETIFTOUCHEDORDERREJECT string = "MARKET_IF_TOUCHED_ORDER_REJECT"
	// OrderFillTransactionTypeTAKEPROFITORDER captures enum value "TAKE_PROFIT_ORDER"
	OrderFillTransactionTypeTAKEPROFITORDER string = "TAKE_PROFIT_ORDER"
	// OrderFillTransactionTypeTAKEPROFITORDERREJECT captures enum value "TAKE_PROFIT_ORDER_REJECT"
	OrderFillTransactionTypeTAKEPROFITORDERREJECT string = "TAKE_PROFIT_ORDER_REJECT"
	// OrderFillTransactionTypeSTOPLOSSORDER captures enum value "STOP_LOSS_ORDER"
	OrderFillTransactionTypeSTOPLOSSORDER string = "STOP_LOSS_ORDER"
	// OrderFillTransactionTypeSTOPLOSSORDERREJECT captures enum value "STOP_LOSS_ORDER_REJECT"
	OrderFillTransactionTypeSTOPLOSSORDERREJECT string = "STOP_LOSS_ORDER_REJECT"
	// OrderFillTransactionTypeTRAILINGSTOPLOSSORDER captures enum value "TRAILING_STOP_LOSS_ORDER"
	OrderFillTransactionTypeTRAILINGSTOPLOSSORDER string = "TRAILING_STOP_LOSS_ORDER"
	// OrderFillTransactionTypeTRAILINGSTOPLOSSORDERREJECT captures enum value "TRAILING_STOP_LOSS_ORDER_REJECT"
	OrderFillTransactionTypeTRAILINGSTOPLOSSORDERREJECT string = "TRAILING_STOP_LOSS_ORDER_REJECT"
	// OrderFillTransactionTypeORDERFILL captures enum value "ORDER_FILL"
	OrderFillTransactionTypeORDERFILL string = "ORDER_FILL"
	// OrderFillTransactionTypeORDERCANCEL captures enum value "ORDER_CANCEL"
	OrderFillTransactionTypeORDERCANCEL string = "ORDER_CANCEL"
	// OrderFillTransactionTypeORDERCANCELREJECT captures enum value "ORDER_CANCEL_REJECT"
	OrderFillTransactionTypeORDERCANCELREJECT string = "ORDER_CANCEL_REJECT"
	// OrderFillTransactionTypeORDERCLIENTEXTENSIONSMODIFY captures enum value "ORDER_CLIENT_EXTENSIONS_MODIFY"
	OrderFillTransactionTypeORDERCLIENTEXTENSIONSMODIFY string = "ORDER_CLIENT_EXTENSIONS_MODIFY"
	// OrderFillTransactionTypeORDERCLIENTEXTENSIONSMODIFYREJECT captures enum value "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT"
	OrderFillTransactionTypeORDERCLIENTEXTENSIONSMODIFYREJECT string = "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT"
	// OrderFillTransactionTypeTRADECLIENTEXTENSIONSMODIFY captures enum value "TRADE_CLIENT_EXTENSIONS_MODIFY"
	OrderFillTransactionTypeTRADECLIENTEXTENSIONSMODIFY string = "TRADE_CLIENT_EXTENSIONS_MODIFY"
	// OrderFillTransactionTypeTRADECLIENTEXTENSIONSMODIFYREJECT captures enum value "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT"
	OrderFillTransactionTypeTRADECLIENTEXTENSIONSMODIFYREJECT string = "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT"
	// OrderFillTransactionTypeMARGINCALLENTER captures enum value "MARGIN_CALL_ENTER"
	OrderFillTransactionTypeMARGINCALLENTER string = "MARGIN_CALL_ENTER"
	// OrderFillTransactionTypeMARGINCALLEXTEND captures enum value "MARGIN_CALL_EXTEND"
	OrderFillTransactionTypeMARGINCALLEXTEND string = "MARGIN_CALL_EXTEND"
	// OrderFillTransactionTypeMARGINCALLEXIT captures enum value "MARGIN_CALL_EXIT"
	OrderFillTransactionTypeMARGINCALLEXIT string = "MARGIN_CALL_EXIT"
	// OrderFillTransactionTypeDELAYEDTRADECLOSURE captures enum value "DELAYED_TRADE_CLOSURE"
	OrderFillTransactionTypeDELAYEDTRADECLOSURE string = "DELAYED_TRADE_CLOSURE"
	// OrderFillTransactionTypeDAILYFINANCING captures enum value "DAILY_FINANCING"
	OrderFillTransactionTypeDAILYFINANCING string = "DAILY_FINANCING"
	// OrderFillTransactionTypeRESETRESETTABLEPL captures enum value "RESET_RESETTABLE_PL"
	OrderFillTransactionTypeRESETRESETTABLEPL string = "RESET_RESETTABLE_PL"
)

// prop value enum
func (m *OrderFillTransaction) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, orderFillTransactionTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OrderFillTransaction) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OrderFillTransaction) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OrderFillTransaction) UnmarshalBinary(b []byte) error {
	var res OrderFillTransaction
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
