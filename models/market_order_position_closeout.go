// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// MarketOrderPositionCloseout A MarketOrderPositionCloseout specifies the extensions to a Market Order when it has been created to closeout a specific Position.
// swagger:model MarketOrderPositionCloseout
type MarketOrderPositionCloseout struct {

	// The instrument of the Position being closed out.
	Instrument string `json:"instrument,omitempty"`

	// Indication of how much of the Position to close. Either "ALL", or a DecimalNumber reflection a partial close of the Trade. The DecimalNumber must always be positive, and represent a number that doesn't exceed the absolute size of the Position.
	Units string `json:"units,omitempty"`
}

// Validate validates this market order position closeout
func (m *MarketOrderPositionCloseout) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *MarketOrderPositionCloseout) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MarketOrderPositionCloseout) UnmarshalBinary(b []byte) error {
	var res MarketOrderPositionCloseout
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
