// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// AcceptDatetimeFormat DateTime header
// swagger:model AcceptDatetimeFormat
type AcceptDatetimeFormat string

const (
	// AcceptDatetimeFormatUNIX captures enum value "UNIX"
	AcceptDatetimeFormatUNIX AcceptDatetimeFormat = "UNIX"
	// AcceptDatetimeFormatRFC3339 captures enum value "RFC3339"
	AcceptDatetimeFormatRFC3339 AcceptDatetimeFormat = "RFC3339"
)

// for schema
var acceptDatetimeFormatEnum []interface{}

func init() {
	var res []AcceptDatetimeFormat
	if err := json.Unmarshal([]byte(`["UNIX","RFC3339"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		acceptDatetimeFormatEnum = append(acceptDatetimeFormatEnum, v)
	}
}

func (m AcceptDatetimeFormat) validateAcceptDatetimeFormatEnum(path, location string, value AcceptDatetimeFormat) error {
	if err := validate.Enum(path, location, value, acceptDatetimeFormatEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this accept datetime format
func (m AcceptDatetimeFormat) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAcceptDatetimeFormatEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
