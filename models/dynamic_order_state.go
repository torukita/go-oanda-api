// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DynamicOrderState The dynamic state of an Order. This is only relevant to TrailingStopLoss Orders, as no other Order type has dynamic state.
// swagger:model DynamicOrderState
type DynamicOrderState struct {

	// The Order's ID.
	ID string `json:"id,omitempty"`

	// True if an exact trigger distance could be calculated. If false, it means the provided trigger distance is a best estimate. If the distance could not be determined, this value will not be set.
	IsTriggerDistanceExact bool `json:"isTriggerDistanceExact,omitempty"`

	// The Order's calculated trailing stop value.
	TrailingStopValue string `json:"trailingStopValue,omitempty"`

	// The distance between the Trailing Stop Loss Order's trailingStopValue and the current Market Price. This represents the distance (in price units) of the Order from a triggering price. If the distance could not be determined, this value will not be set.
	TriggerDistance string `json:"triggerDistance,omitempty"`
}

// Validate validates this dynamic order state
func (m *DynamicOrderState) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *DynamicOrderState) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DynamicOrderState) UnmarshalBinary(b []byte) error {
	var res DynamicOrderState
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
