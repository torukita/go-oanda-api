// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ListTransactionsOKBody list transactions o k body
// swagger:model listTransactionsOKBody
type ListTransactionsOKBody struct {

	// The number of Transactions that are contained in the pages returned
	Count int64 `json:"count,omitempty"`

	// The starting time provided in the request.
	From string `json:"from,omitempty"`

	// The ID of the most recent Transaction created for the Account
	LastTransactionID string `json:"lastTransactionID,omitempty"`

	// The pageSize provided in the request
	PageSize int64 `json:"pageSize,omitempty"`

	// The list of URLs that represent idrange queries providing the data for each page in the query results
	Pages []string `json:"pages"`

	// The ending time provided in the request.
	To string `json:"to,omitempty"`

	// The Transaction-type filter provided in the request
	Type []string `json:"type"`
}

// Validate validates this list transactions o k body
func (m *ListTransactionsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePages(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ListTransactionsOKBody) validatePages(formats strfmt.Registry) error {

	if swag.IsZero(m.Pages) { // not required
		return nil
	}

	return nil
}

var listTransactionsOKBodyTypeItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ORDER","FUNDING","ADMIN","CREATE","CLOSE","REOPEN","CLIENT_CONFIGURE","CLIENT_CONFIGURE_REJECT","TRANSFER_FUNDS","TRANSFER_FUNDS_REJECT","MARKET_ORDER","MARKET_ORDER_REJECT","LIMIT_ORDER","LIMIT_ORDER_REJECT","STOP_ORDER","STOP_ORDER_REJECT","MARKET_IF_TOUCHED_ORDER","MARKET_IF_TOUCHED_ORDER_REJECT","TAKE_PROFIT_ORDER","TAKE_PROFIT_ORDER_REJECT","STOP_LOSS_ORDER","STOP_LOSS_ORDER_REJECT","TRAILING_STOP_LOSS_ORDER","TRAILING_STOP_LOSS_ORDER_REJECT","ONE_CANCELS_ALL_ORDER","ONE_CANCELS_ALL_ORDER_REJECT","ONE_CANCELS_ALL_ORDER_TRIGGERED","ORDER_FILL","ORDER_CANCEL","ORDER_CANCEL_REJECT","ORDER_CLIENT_EXTENSIONS_MODIFY","ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT","TRADE_CLIENT_EXTENSIONS_MODIFY","TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT","MARGIN_CALL_ENTER","MARGIN_CALL_EXTEND","MARGIN_CALL_EXIT","DELAYED_TRADE_CLOSURE","DAILY_FINANCING","RESET_RESETTABLE_PL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		listTransactionsOKBodyTypeItemsEnum = append(listTransactionsOKBodyTypeItemsEnum, v)
	}
}

func (m *ListTransactionsOKBody) validateTypeItemsEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, listTransactionsOKBodyTypeItemsEnum); err != nil {
		return err
	}
	return nil
}

func (m *ListTransactionsOKBody) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	for i := 0; i < len(m.Type); i++ {

		// value enum
		if err := m.validateTypeItemsEnum("type"+"."+strconv.Itoa(i), "body", m.Type[i]); err != nil {
			return err
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ListTransactionsOKBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ListTransactionsOKBody) UnmarshalBinary(b []byte) error {
	var res ListTransactionsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
