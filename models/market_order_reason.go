// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// MarketOrderReason The reason that the Market Order was created
// swagger:model MarketOrderReason
type MarketOrderReason string

const (
	// MarketOrderReasonCLIENTORDER captures enum value "CLIENT_ORDER"
	MarketOrderReasonCLIENTORDER MarketOrderReason = "CLIENT_ORDER"
	// MarketOrderReasonTRADECLOSE captures enum value "TRADE_CLOSE"
	MarketOrderReasonTRADECLOSE MarketOrderReason = "TRADE_CLOSE"
	// MarketOrderReasonPOSITIONCLOSEOUT captures enum value "POSITION_CLOSEOUT"
	MarketOrderReasonPOSITIONCLOSEOUT MarketOrderReason = "POSITION_CLOSEOUT"
	// MarketOrderReasonMARGINCLOSEOUT captures enum value "MARGIN_CLOSEOUT"
	MarketOrderReasonMARGINCLOSEOUT MarketOrderReason = "MARGIN_CLOSEOUT"
	// MarketOrderReasonDELAYEDTRADECLOSE captures enum value "DELAYED_TRADE_CLOSE"
	MarketOrderReasonDELAYEDTRADECLOSE MarketOrderReason = "DELAYED_TRADE_CLOSE"
)

// for schema
var marketOrderReasonEnum []interface{}

func init() {
	var res []MarketOrderReason
	if err := json.Unmarshal([]byte(`["CLIENT_ORDER","TRADE_CLOSE","POSITION_CLOSEOUT","MARGIN_CLOSEOUT","DELAYED_TRADE_CLOSE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		marketOrderReasonEnum = append(marketOrderReasonEnum, v)
	}
}

func (m MarketOrderReason) validateMarketOrderReasonEnum(path, location string, value MarketOrderReason) error {
	if err := validate.Enum(path, location, value, marketOrderReasonEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this market order reason
func (m MarketOrderReason) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateMarketOrderReasonEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
