// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LimitOrderReason The reason that the Limit Order was initiated
// swagger:model LimitOrderReason
type LimitOrderReason string

const (
	// LimitOrderReasonCLIENTORDER captures enum value "CLIENT_ORDER"
	LimitOrderReasonCLIENTORDER LimitOrderReason = "CLIENT_ORDER"
	// LimitOrderReasonREPLACEMENT captures enum value "REPLACEMENT"
	LimitOrderReasonREPLACEMENT LimitOrderReason = "REPLACEMENT"
)

// for schema
var limitOrderReasonEnum []interface{}

func init() {
	var res []LimitOrderReason
	if err := json.Unmarshal([]byte(`["CLIENT_ORDER","REPLACEMENT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		limitOrderReasonEnum = append(limitOrderReasonEnum, v)
	}
}

func (m LimitOrderReason) validateLimitOrderReasonEnum(path, location string, value LimitOrderReason) error {
	if err := validate.Enum(path, location, value, limitOrderReasonEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this limit order reason
func (m LimitOrderReason) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLimitOrderReasonEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
