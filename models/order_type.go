// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// OrderType The type of the Order.
// swagger:model OrderType
type OrderType string

const (
	// OrderTypeMARKET captures enum value "MARKET"
	OrderTypeMARKET OrderType = "MARKET"
	// OrderTypeLIMIT captures enum value "LIMIT"
	OrderTypeLIMIT OrderType = "LIMIT"
	// OrderTypeSTOP captures enum value "STOP"
	OrderTypeSTOP OrderType = "STOP"
	// OrderTypeMARKETIFTOUCHED captures enum value "MARKET_IF_TOUCHED"
	OrderTypeMARKETIFTOUCHED OrderType = "MARKET_IF_TOUCHED"
	// OrderTypeTAKEPROFIT captures enum value "TAKE_PROFIT"
	OrderTypeTAKEPROFIT OrderType = "TAKE_PROFIT"
	// OrderTypeSTOPLOSS captures enum value "STOP_LOSS"
	OrderTypeSTOPLOSS OrderType = "STOP_LOSS"
	// OrderTypeTRAILINGSTOPLOSS captures enum value "TRAILING_STOP_LOSS"
	OrderTypeTRAILINGSTOPLOSS OrderType = "TRAILING_STOP_LOSS"
)

// for schema
var orderTypeEnum []interface{}

func init() {
	var res []OrderType
	if err := json.Unmarshal([]byte(`["MARKET","LIMIT","STOP","MARKET_IF_TOUCHED","TAKE_PROFIT","STOP_LOSS","TRAILING_STOP_LOSS"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		orderTypeEnum = append(orderTypeEnum, v)
	}
}

func (m OrderType) validateOrderTypeEnum(path, location string, value OrderType) error {
	if err := validate.Enum(path, location, value, orderTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this order type
func (m OrderType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateOrderTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
