// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// PriceStatus The status of the Price.
// swagger:model PriceStatus
type PriceStatus string

const (
	// PriceStatusTradeable captures enum value "tradeable"
//	PriceStatusTradeable PriceStatus = "tradeable"
	// PriceStatusNonTradeable captures enum value "non-tradeable"
//	PriceStatusNonTradeable PriceStatus = "non-tradeable"
	// PriceStatusInvalid captures enum value "invalid"
//	PriceStatusInvalid PriceStatus = "invalid"
)

// for schema
var priceStatusEnum []interface{}

func init() {
	var res []PriceStatus
	if err := json.Unmarshal([]byte(`["tradeable","non-tradeable","invalid"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		priceStatusEnum = append(priceStatusEnum, v)
	}
}

func (m PriceStatus) validatePriceStatusEnum(path, location string, value PriceStatus) error {
	if err := validate.Enum(path, location, value, priceStatusEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this price status
func (m PriceStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validatePriceStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
