// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// StopOrderReason The reason that the Stop Order was initiated
// swagger:model StopOrderReason
type StopOrderReason string

const (
	// StopOrderReasonCLIENTORDER captures enum value "CLIENT_ORDER"
	StopOrderReasonCLIENTORDER StopOrderReason = "CLIENT_ORDER"
	// StopOrderReasonREPLACEMENT captures enum value "REPLACEMENT"
	StopOrderReasonREPLACEMENT StopOrderReason = "REPLACEMENT"
)

// for schema
var stopOrderReasonEnum []interface{}

func init() {
	var res []StopOrderReason
	if err := json.Unmarshal([]byte(`["CLIENT_ORDER","REPLACEMENT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		stopOrderReasonEnum = append(stopOrderReasonEnum, v)
	}
}

func (m StopOrderReason) validateStopOrderReasonEnum(path, location string, value StopOrderReason) error {
	if err := validate.Enum(path, location, value, stopOrderReasonEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this stop order reason
func (m StopOrderReason) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateStopOrderReasonEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
