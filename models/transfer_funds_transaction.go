// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TransferFundsTransaction A TransferFundsTransaction represents the transfer of funds in/out of an Account.
// swagger:model TransferFundsTransaction
type TransferFundsTransaction struct {

	// The Account's balance after funds are transferred.
	AccountBalance string `json:"accountBalance,omitempty"`

	// The ID of the Account the Transaction was created for.
	AccountID string `json:"accountID,omitempty"`

	// The amount to deposit/withdraw from the Account in the Account's home currency. A positive value indicates a deposit, a negative value indicates a withdrawal.
	Amount string `json:"amount,omitempty"`

	// The ID of the "batch" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.
	BatchID string `json:"batchID,omitempty"`

	// An optional comment that may be attached to a fund transfer for audit purposes
	Comment string `json:"comment,omitempty"`

	// The reason that an Account is being funded.
	FundingReason string `json:"fundingReason,omitempty"`

	// The Transaction's Identifier.
	ID string `json:"id,omitempty"`

	// The Request ID of the request which generated the transaction.
	RequestID string `json:"requestID,omitempty"`

	// The date/time when the Transaction was created.
	Time string `json:"time,omitempty"`

	// The Type of the Transaction. Always set to "TRANSFER_FUNDS" in a TransferFundsTransaction.
	Type string `json:"type,omitempty"`

	// The ID of the user that initiated the creation of the Transaction.
	UserID int64 `json:"userID,omitempty"`
}

// Validate validates this transfer funds transaction
func (m *TransferFundsTransaction) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFundingReason(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var transferFundsTransactionTypeFundingReasonPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["CLIENT_FUNDING","ACCOUNT_TRANSFER","DIVISION_MIGRATION","SITE_MIGRATION","ADJUSTMENT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		transferFundsTransactionTypeFundingReasonPropEnum = append(transferFundsTransactionTypeFundingReasonPropEnum, v)
	}
}

const (
	// TransferFundsTransactionFundingReasonCLIENTFUNDING captures enum value "CLIENT_FUNDING"
	TransferFundsTransactionFundingReasonCLIENTFUNDING string = "CLIENT_FUNDING"
	// TransferFundsTransactionFundingReasonACCOUNTTRANSFER captures enum value "ACCOUNT_TRANSFER"
	TransferFundsTransactionFundingReasonACCOUNTTRANSFER string = "ACCOUNT_TRANSFER"
	// TransferFundsTransactionFundingReasonDIVISIONMIGRATION captures enum value "DIVISION_MIGRATION"
	TransferFundsTransactionFundingReasonDIVISIONMIGRATION string = "DIVISION_MIGRATION"
	// TransferFundsTransactionFundingReasonSITEMIGRATION captures enum value "SITE_MIGRATION"
	TransferFundsTransactionFundingReasonSITEMIGRATION string = "SITE_MIGRATION"
	// TransferFundsTransactionFundingReasonADJUSTMENT captures enum value "ADJUSTMENT"
	TransferFundsTransactionFundingReasonADJUSTMENT string = "ADJUSTMENT"
)

// prop value enum
func (m *TransferFundsTransaction) validateFundingReasonEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, transferFundsTransactionTypeFundingReasonPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *TransferFundsTransaction) validateFundingReason(formats strfmt.Registry) error {

	if swag.IsZero(m.FundingReason) { // not required
		return nil
	}

	// value enum
	if err := m.validateFundingReasonEnum("fundingReason", "body", m.FundingReason); err != nil {
		return err
	}

	return nil
}

var transferFundsTransactionTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["CREATE","CLOSE","REOPEN","CLIENT_CONFIGURE","CLIENT_CONFIGURE_REJECT","TRANSFER_FUNDS","TRANSFER_FUNDS_REJECT","MARKET_ORDER","MARKET_ORDER_REJECT","LIMIT_ORDER","LIMIT_ORDER_REJECT","STOP_ORDER","STOP_ORDER_REJECT","MARKET_IF_TOUCHED_ORDER","MARKET_IF_TOUCHED_ORDER_REJECT","TAKE_PROFIT_ORDER","TAKE_PROFIT_ORDER_REJECT","STOP_LOSS_ORDER","STOP_LOSS_ORDER_REJECT","TRAILING_STOP_LOSS_ORDER","TRAILING_STOP_LOSS_ORDER_REJECT","ORDER_FILL","ORDER_CANCEL","ORDER_CANCEL_REJECT","ORDER_CLIENT_EXTENSIONS_MODIFY","ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT","TRADE_CLIENT_EXTENSIONS_MODIFY","TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT","MARGIN_CALL_ENTER","MARGIN_CALL_EXTEND","MARGIN_CALL_EXIT","DELAYED_TRADE_CLOSURE","DAILY_FINANCING","RESET_RESETTABLE_PL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		transferFundsTransactionTypeTypePropEnum = append(transferFundsTransactionTypeTypePropEnum, v)
	}
}

const (
	// TransferFundsTransactionTypeCREATE captures enum value "CREATE"
	TransferFundsTransactionTypeCREATE string = "CREATE"
	// TransferFundsTransactionTypeCLOSE captures enum value "CLOSE"
	TransferFundsTransactionTypeCLOSE string = "CLOSE"
	// TransferFundsTransactionTypeREOPEN captures enum value "REOPEN"
	TransferFundsTransactionTypeREOPEN string = "REOPEN"
	// TransferFundsTransactionTypeCLIENTCONFIGURE captures enum value "CLIENT_CONFIGURE"
	TransferFundsTransactionTypeCLIENTCONFIGURE string = "CLIENT_CONFIGURE"
	// TransferFundsTransactionTypeCLIENTCONFIGUREREJECT captures enum value "CLIENT_CONFIGURE_REJECT"
	TransferFundsTransactionTypeCLIENTCONFIGUREREJECT string = "CLIENT_CONFIGURE_REJECT"
	// TransferFundsTransactionTypeTRANSFERFUNDS captures enum value "TRANSFER_FUNDS"
	TransferFundsTransactionTypeTRANSFERFUNDS string = "TRANSFER_FUNDS"
	// TransferFundsTransactionTypeTRANSFERFUNDSREJECT captures enum value "TRANSFER_FUNDS_REJECT"
	TransferFundsTransactionTypeTRANSFERFUNDSREJECT string = "TRANSFER_FUNDS_REJECT"
	// TransferFundsTransactionTypeMARKETORDER captures enum value "MARKET_ORDER"
	TransferFundsTransactionTypeMARKETORDER string = "MARKET_ORDER"
	// TransferFundsTransactionTypeMARKETORDERREJECT captures enum value "MARKET_ORDER_REJECT"
	TransferFundsTransactionTypeMARKETORDERREJECT string = "MARKET_ORDER_REJECT"
	// TransferFundsTransactionTypeLIMITORDER captures enum value "LIMIT_ORDER"
	TransferFundsTransactionTypeLIMITORDER string = "LIMIT_ORDER"
	// TransferFundsTransactionTypeLIMITORDERREJECT captures enum value "LIMIT_ORDER_REJECT"
	TransferFundsTransactionTypeLIMITORDERREJECT string = "LIMIT_ORDER_REJECT"
	// TransferFundsTransactionTypeSTOPORDER captures enum value "STOP_ORDER"
	TransferFundsTransactionTypeSTOPORDER string = "STOP_ORDER"
	// TransferFundsTransactionTypeSTOPORDERREJECT captures enum value "STOP_ORDER_REJECT"
	TransferFundsTransactionTypeSTOPORDERREJECT string = "STOP_ORDER_REJECT"
	// TransferFundsTransactionTypeMARKETIFTOUCHEDORDER captures enum value "MARKET_IF_TOUCHED_ORDER"
	TransferFundsTransactionTypeMARKETIFTOUCHEDORDER string = "MARKET_IF_TOUCHED_ORDER"
	// TransferFundsTransactionTypeMARKETIFTOUCHEDORDERREJECT captures enum value "MARKET_IF_TOUCHED_ORDER_REJECT"
	TransferFundsTransactionTypeMARKETIFTOUCHEDORDERREJECT string = "MARKET_IF_TOUCHED_ORDER_REJECT"
	// TransferFundsTransactionTypeTAKEPROFITORDER captures enum value "TAKE_PROFIT_ORDER"
	TransferFundsTransactionTypeTAKEPROFITORDER string = "TAKE_PROFIT_ORDER"
	// TransferFundsTransactionTypeTAKEPROFITORDERREJECT captures enum value "TAKE_PROFIT_ORDER_REJECT"
	TransferFundsTransactionTypeTAKEPROFITORDERREJECT string = "TAKE_PROFIT_ORDER_REJECT"
	// TransferFundsTransactionTypeSTOPLOSSORDER captures enum value "STOP_LOSS_ORDER"
	TransferFundsTransactionTypeSTOPLOSSORDER string = "STOP_LOSS_ORDER"
	// TransferFundsTransactionTypeSTOPLOSSORDERREJECT captures enum value "STOP_LOSS_ORDER_REJECT"
	TransferFundsTransactionTypeSTOPLOSSORDERREJECT string = "STOP_LOSS_ORDER_REJECT"
	// TransferFundsTransactionTypeTRAILINGSTOPLOSSORDER captures enum value "TRAILING_STOP_LOSS_ORDER"
	TransferFundsTransactionTypeTRAILINGSTOPLOSSORDER string = "TRAILING_STOP_LOSS_ORDER"
	// TransferFundsTransactionTypeTRAILINGSTOPLOSSORDERREJECT captures enum value "TRAILING_STOP_LOSS_ORDER_REJECT"
	TransferFundsTransactionTypeTRAILINGSTOPLOSSORDERREJECT string = "TRAILING_STOP_LOSS_ORDER_REJECT"
	// TransferFundsTransactionTypeORDERFILL captures enum value "ORDER_FILL"
	TransferFundsTransactionTypeORDERFILL string = "ORDER_FILL"
	// TransferFundsTransactionTypeORDERCANCEL captures enum value "ORDER_CANCEL"
	TransferFundsTransactionTypeORDERCANCEL string = "ORDER_CANCEL"
	// TransferFundsTransactionTypeORDERCANCELREJECT captures enum value "ORDER_CANCEL_REJECT"
	TransferFundsTransactionTypeORDERCANCELREJECT string = "ORDER_CANCEL_REJECT"
	// TransferFundsTransactionTypeORDERCLIENTEXTENSIONSMODIFY captures enum value "ORDER_CLIENT_EXTENSIONS_MODIFY"
	TransferFundsTransactionTypeORDERCLIENTEXTENSIONSMODIFY string = "ORDER_CLIENT_EXTENSIONS_MODIFY"
	// TransferFundsTransactionTypeORDERCLIENTEXTENSIONSMODIFYREJECT captures enum value "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT"
	TransferFundsTransactionTypeORDERCLIENTEXTENSIONSMODIFYREJECT string = "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT"
	// TransferFundsTransactionTypeTRADECLIENTEXTENSIONSMODIFY captures enum value "TRADE_CLIENT_EXTENSIONS_MODIFY"
	TransferFundsTransactionTypeTRADECLIENTEXTENSIONSMODIFY string = "TRADE_CLIENT_EXTENSIONS_MODIFY"
	// TransferFundsTransactionTypeTRADECLIENTEXTENSIONSMODIFYREJECT captures enum value "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT"
	TransferFundsTransactionTypeTRADECLIENTEXTENSIONSMODIFYREJECT string = "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT"
	// TransferFundsTransactionTypeMARGINCALLENTER captures enum value "MARGIN_CALL_ENTER"
	TransferFundsTransactionTypeMARGINCALLENTER string = "MARGIN_CALL_ENTER"
	// TransferFundsTransactionTypeMARGINCALLEXTEND captures enum value "MARGIN_CALL_EXTEND"
	TransferFundsTransactionTypeMARGINCALLEXTEND string = "MARGIN_CALL_EXTEND"
	// TransferFundsTransactionTypeMARGINCALLEXIT captures enum value "MARGIN_CALL_EXIT"
	TransferFundsTransactionTypeMARGINCALLEXIT string = "MARGIN_CALL_EXIT"
	// TransferFundsTransactionTypeDELAYEDTRADECLOSURE captures enum value "DELAYED_TRADE_CLOSURE"
	TransferFundsTransactionTypeDELAYEDTRADECLOSURE string = "DELAYED_TRADE_CLOSURE"
	// TransferFundsTransactionTypeDAILYFINANCING captures enum value "DAILY_FINANCING"
	TransferFundsTransactionTypeDAILYFINANCING string = "DAILY_FINANCING"
	// TransferFundsTransactionTypeRESETRESETTABLEPL captures enum value "RESET_RESETTABLE_PL"
	TransferFundsTransactionTypeRESETRESETTABLEPL string = "RESET_RESETTABLE_PL"
)

// prop value enum
func (m *TransferFundsTransaction) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, transferFundsTransactionTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *TransferFundsTransaction) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TransferFundsTransaction) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TransferFundsTransaction) UnmarshalBinary(b []byte) error {
	var res TransferFundsTransaction
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
