// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// TimeInForce The time-in-force of an Order. TimeInForce describes how long an Order should remain pending before being automatically cancelled by the execution system.
// swagger:model TimeInForce
type TimeInForce string

const (
	// TimeInForceGTC captures enum value "GTC"
	TimeInForceGTC TimeInForce = "GTC"
	// TimeInForceGTD captures enum value "GTD"
	TimeInForceGTD TimeInForce = "GTD"
	// TimeInForceGFD captures enum value "GFD"
	TimeInForceGFD TimeInForce = "GFD"
	// TimeInForceFOK captures enum value "FOK"
	TimeInForceFOK TimeInForce = "FOK"
	// TimeInForceIOC captures enum value "IOC"
	TimeInForceIOC TimeInForce = "IOC"
)

// for schema
var timeInForceEnum []interface{}

func init() {
	var res []TimeInForce
	if err := json.Unmarshal([]byte(`["GTC","GTD","GFD","FOK","IOC"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		timeInForceEnum = append(timeInForceEnum, v)
	}
}

func (m TimeInForce) validateTimeInForceEnum(path, location string, value TimeInForce) error {
	if err := validate.Enum(path, location, value, timeInForceEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this time in force
func (m TimeInForce) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateTimeInForceEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
