// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CloseTransaction A CloseTransaction represents the closing of an Account.
// swagger:model CloseTransaction
type CloseTransaction struct {

	// The ID of the Account the Transaction was created for.
	AccountID string `json:"accountID,omitempty"`

	// The ID of the "batch" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.
	BatchID string `json:"batchID,omitempty"`

	// The Transaction's Identifier.
	ID string `json:"id,omitempty"`

	// The Request ID of the request which generated the transaction.
	RequestID string `json:"requestID,omitempty"`

	// The date/time when the Transaction was created.
	Time string `json:"time,omitempty"`

	// The Type of the Transaction. Always set to "CLOSE" in a CloseTransaction.
	Type string `json:"type,omitempty"`

	// The ID of the user that initiated the creation of the Transaction.
	UserID int64 `json:"userID,omitempty"`
}

// Validate validates this close transaction
func (m *CloseTransaction) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var closeTransactionTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["CREATE","CLOSE","REOPEN","CLIENT_CONFIGURE","CLIENT_CONFIGURE_REJECT","TRANSFER_FUNDS","TRANSFER_FUNDS_REJECT","MARKET_ORDER","MARKET_ORDER_REJECT","LIMIT_ORDER","LIMIT_ORDER_REJECT","STOP_ORDER","STOP_ORDER_REJECT","MARKET_IF_TOUCHED_ORDER","MARKET_IF_TOUCHED_ORDER_REJECT","TAKE_PROFIT_ORDER","TAKE_PROFIT_ORDER_REJECT","STOP_LOSS_ORDER","STOP_LOSS_ORDER_REJECT","TRAILING_STOP_LOSS_ORDER","TRAILING_STOP_LOSS_ORDER_REJECT","ORDER_FILL","ORDER_CANCEL","ORDER_CANCEL_REJECT","ORDER_CLIENT_EXTENSIONS_MODIFY","ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT","TRADE_CLIENT_EXTENSIONS_MODIFY","TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT","MARGIN_CALL_ENTER","MARGIN_CALL_EXTEND","MARGIN_CALL_EXIT","DELAYED_TRADE_CLOSURE","DAILY_FINANCING","RESET_RESETTABLE_PL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		closeTransactionTypeTypePropEnum = append(closeTransactionTypeTypePropEnum, v)
	}
}

const (
	// CloseTransactionTypeCREATE captures enum value "CREATE"
	CloseTransactionTypeCREATE string = "CREATE"
	// CloseTransactionTypeCLOSE captures enum value "CLOSE"
	CloseTransactionTypeCLOSE string = "CLOSE"
	// CloseTransactionTypeREOPEN captures enum value "REOPEN"
	CloseTransactionTypeREOPEN string = "REOPEN"
	// CloseTransactionTypeCLIENTCONFIGURE captures enum value "CLIENT_CONFIGURE"
	CloseTransactionTypeCLIENTCONFIGURE string = "CLIENT_CONFIGURE"
	// CloseTransactionTypeCLIENTCONFIGUREREJECT captures enum value "CLIENT_CONFIGURE_REJECT"
	CloseTransactionTypeCLIENTCONFIGUREREJECT string = "CLIENT_CONFIGURE_REJECT"
	// CloseTransactionTypeTRANSFERFUNDS captures enum value "TRANSFER_FUNDS"
	CloseTransactionTypeTRANSFERFUNDS string = "TRANSFER_FUNDS"
	// CloseTransactionTypeTRANSFERFUNDSREJECT captures enum value "TRANSFER_FUNDS_REJECT"
	CloseTransactionTypeTRANSFERFUNDSREJECT string = "TRANSFER_FUNDS_REJECT"
	// CloseTransactionTypeMARKETORDER captures enum value "MARKET_ORDER"
	CloseTransactionTypeMARKETORDER string = "MARKET_ORDER"
	// CloseTransactionTypeMARKETORDERREJECT captures enum value "MARKET_ORDER_REJECT"
	CloseTransactionTypeMARKETORDERREJECT string = "MARKET_ORDER_REJECT"
	// CloseTransactionTypeLIMITORDER captures enum value "LIMIT_ORDER"
	CloseTransactionTypeLIMITORDER string = "LIMIT_ORDER"
	// CloseTransactionTypeLIMITORDERREJECT captures enum value "LIMIT_ORDER_REJECT"
	CloseTransactionTypeLIMITORDERREJECT string = "LIMIT_ORDER_REJECT"
	// CloseTransactionTypeSTOPORDER captures enum value "STOP_ORDER"
	CloseTransactionTypeSTOPORDER string = "STOP_ORDER"
	// CloseTransactionTypeSTOPORDERREJECT captures enum value "STOP_ORDER_REJECT"
	CloseTransactionTypeSTOPORDERREJECT string = "STOP_ORDER_REJECT"
	// CloseTransactionTypeMARKETIFTOUCHEDORDER captures enum value "MARKET_IF_TOUCHED_ORDER"
	CloseTransactionTypeMARKETIFTOUCHEDORDER string = "MARKET_IF_TOUCHED_ORDER"
	// CloseTransactionTypeMARKETIFTOUCHEDORDERREJECT captures enum value "MARKET_IF_TOUCHED_ORDER_REJECT"
	CloseTransactionTypeMARKETIFTOUCHEDORDERREJECT string = "MARKET_IF_TOUCHED_ORDER_REJECT"
	// CloseTransactionTypeTAKEPROFITORDER captures enum value "TAKE_PROFIT_ORDER"
	CloseTransactionTypeTAKEPROFITORDER string = "TAKE_PROFIT_ORDER"
	// CloseTransactionTypeTAKEPROFITORDERREJECT captures enum value "TAKE_PROFIT_ORDER_REJECT"
	CloseTransactionTypeTAKEPROFITORDERREJECT string = "TAKE_PROFIT_ORDER_REJECT"
	// CloseTransactionTypeSTOPLOSSORDER captures enum value "STOP_LOSS_ORDER"
	CloseTransactionTypeSTOPLOSSORDER string = "STOP_LOSS_ORDER"
	// CloseTransactionTypeSTOPLOSSORDERREJECT captures enum value "STOP_LOSS_ORDER_REJECT"
	CloseTransactionTypeSTOPLOSSORDERREJECT string = "STOP_LOSS_ORDER_REJECT"
	// CloseTransactionTypeTRAILINGSTOPLOSSORDER captures enum value "TRAILING_STOP_LOSS_ORDER"
	CloseTransactionTypeTRAILINGSTOPLOSSORDER string = "TRAILING_STOP_LOSS_ORDER"
	// CloseTransactionTypeTRAILINGSTOPLOSSORDERREJECT captures enum value "TRAILING_STOP_LOSS_ORDER_REJECT"
	CloseTransactionTypeTRAILINGSTOPLOSSORDERREJECT string = "TRAILING_STOP_LOSS_ORDER_REJECT"
	// CloseTransactionTypeORDERFILL captures enum value "ORDER_FILL"
	CloseTransactionTypeORDERFILL string = "ORDER_FILL"
	// CloseTransactionTypeORDERCANCEL captures enum value "ORDER_CANCEL"
	CloseTransactionTypeORDERCANCEL string = "ORDER_CANCEL"
	// CloseTransactionTypeORDERCANCELREJECT captures enum value "ORDER_CANCEL_REJECT"
	CloseTransactionTypeORDERCANCELREJECT string = "ORDER_CANCEL_REJECT"
	// CloseTransactionTypeORDERCLIENTEXTENSIONSMODIFY captures enum value "ORDER_CLIENT_EXTENSIONS_MODIFY"
	CloseTransactionTypeORDERCLIENTEXTENSIONSMODIFY string = "ORDER_CLIENT_EXTENSIONS_MODIFY"
	// CloseTransactionTypeORDERCLIENTEXTENSIONSMODIFYREJECT captures enum value "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT"
	CloseTransactionTypeORDERCLIENTEXTENSIONSMODIFYREJECT string = "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT"
	// CloseTransactionTypeTRADECLIENTEXTENSIONSMODIFY captures enum value "TRADE_CLIENT_EXTENSIONS_MODIFY"
	CloseTransactionTypeTRADECLIENTEXTENSIONSMODIFY string = "TRADE_CLIENT_EXTENSIONS_MODIFY"
	// CloseTransactionTypeTRADECLIENTEXTENSIONSMODIFYREJECT captures enum value "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT"
	CloseTransactionTypeTRADECLIENTEXTENSIONSMODIFYREJECT string = "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT"
	// CloseTransactionTypeMARGINCALLENTER captures enum value "MARGIN_CALL_ENTER"
	CloseTransactionTypeMARGINCALLENTER string = "MARGIN_CALL_ENTER"
	// CloseTransactionTypeMARGINCALLEXTEND captures enum value "MARGIN_CALL_EXTEND"
	CloseTransactionTypeMARGINCALLEXTEND string = "MARGIN_CALL_EXTEND"
	// CloseTransactionTypeMARGINCALLEXIT captures enum value "MARGIN_CALL_EXIT"
	CloseTransactionTypeMARGINCALLEXIT string = "MARGIN_CALL_EXIT"
	// CloseTransactionTypeDELAYEDTRADECLOSURE captures enum value "DELAYED_TRADE_CLOSURE"
	CloseTransactionTypeDELAYEDTRADECLOSURE string = "DELAYED_TRADE_CLOSURE"
	// CloseTransactionTypeDAILYFINANCING captures enum value "DAILY_FINANCING"
	CloseTransactionTypeDAILYFINANCING string = "DAILY_FINANCING"
	// CloseTransactionTypeRESETRESETTABLEPL captures enum value "RESET_RESETTABLE_PL"
	CloseTransactionTypeRESETRESETTABLEPL string = "RESET_RESETTABLE_PL"
)

// prop value enum
func (m *CloseTransaction) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, closeTransactionTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *CloseTransaction) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CloseTransaction) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CloseTransaction) UnmarshalBinary(b []byte) error {
	var res CloseTransaction
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
