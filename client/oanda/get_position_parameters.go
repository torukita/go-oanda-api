// Code generated by go-swagger; DO NOT EDIT.

package oanda

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetPositionParams creates a new GetPositionParams object
// with the default values initialized.
func NewGetPositionParams() *GetPositionParams {
	var ()
	return &GetPositionParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetPositionParamsWithTimeout creates a new GetPositionParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetPositionParamsWithTimeout(timeout time.Duration) *GetPositionParams {
	var ()
	return &GetPositionParams{

		timeout: timeout,
	}
}

// NewGetPositionParamsWithContext creates a new GetPositionParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetPositionParamsWithContext(ctx context.Context) *GetPositionParams {
	var ()
	return &GetPositionParams{

		Context: ctx,
	}
}

// NewGetPositionParamsWithHTTPClient creates a new GetPositionParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetPositionParamsWithHTTPClient(client *http.Client) *GetPositionParams {
	var ()
	return &GetPositionParams{
		HTTPClient: client,
	}
}

/*GetPositionParams contains all the parameters to send to the API endpoint
for the get position operation typically these are written to a http.Request
*/
type GetPositionParams struct {

	/*Authorization
	  The authorization bearer token previously obtained by the client

	*/
	Authorization string
	/*AccountID
	  Account Identifier

	*/
	AccountID string
	/*Instrument
	  Name of the Instrument

	*/
	Instrument string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get position params
func (o *GetPositionParams) WithTimeout(timeout time.Duration) *GetPositionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get position params
func (o *GetPositionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get position params
func (o *GetPositionParams) WithContext(ctx context.Context) *GetPositionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get position params
func (o *GetPositionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get position params
func (o *GetPositionParams) WithHTTPClient(client *http.Client) *GetPositionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get position params
func (o *GetPositionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the get position params
func (o *GetPositionParams) WithAuthorization(authorization string) *GetPositionParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the get position params
func (o *GetPositionParams) SetAuthorization(authorization string) {
	o.Authorization = authorization
}

// WithAccountID adds the accountID to the get position params
func (o *GetPositionParams) WithAccountID(accountID string) *GetPositionParams {
	o.SetAccountID(accountID)
	return o
}

// SetAccountID adds the accountId to the get position params
func (o *GetPositionParams) SetAccountID(accountID string) {
	o.AccountID = accountID
}

// WithInstrument adds the instrument to the get position params
func (o *GetPositionParams) WithInstrument(instrument string) *GetPositionParams {
	o.SetInstrument(instrument)
	return o
}

// SetInstrument adds the instrument to the get position params
func (o *GetPositionParams) SetInstrument(instrument string) {
	o.Instrument = instrument
}

// WriteToRequest writes these params to a swagger request
func (o *GetPositionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	// path param accountID
	if err := r.SetPathParam("accountID", o.AccountID); err != nil {
		return err
	}

	// path param instrument
	if err := r.SetPathParam("instrument", o.Instrument); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
