// Code generated by go-swagger; DO NOT EDIT.

package oanda

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/torukita/go-oanda-api/models"
)

// SetOrderClientExtensionsReader is a Reader for the SetOrderClientExtensions structure.
type SetOrderClientExtensionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetOrderClientExtensionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSetOrderClientExtensionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSetOrderClientExtensionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewSetOrderClientExtensionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewSetOrderClientExtensionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewSetOrderClientExtensionsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSetOrderClientExtensionsOK creates a SetOrderClientExtensionsOK with default headers values
func NewSetOrderClientExtensionsOK() *SetOrderClientExtensionsOK {
	return &SetOrderClientExtensionsOK{}
}

/*SetOrderClientExtensionsOK handles this case with default header values.

The Order's Client Extensions were successfully modified
*/
type SetOrderClientExtensionsOK struct {
	/*The unique identifier generated for the request
	 */
	RequestID string

	Payload *models.SetOrderClientExtensionsOKBody
}

func (o *SetOrderClientExtensionsOK) Error() string {
	return fmt.Sprintf("[PUT /accounts/{accountID}/orders/{orderSpecifier}/clientExtensions][%d] setOrderClientExtensionsOK  %+v", 200, o.Payload)
}

func (o *SetOrderClientExtensionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header RequestID
	o.RequestID = response.GetHeader("RequestID")

	o.Payload = new(models.SetOrderClientExtensionsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetOrderClientExtensionsBadRequest creates a SetOrderClientExtensionsBadRequest with default headers values
func NewSetOrderClientExtensionsBadRequest() *SetOrderClientExtensionsBadRequest {
	return &SetOrderClientExtensionsBadRequest{}
}

/*SetOrderClientExtensionsBadRequest handles this case with default header values.

The Order Client Extensions specification was invalid
*/
type SetOrderClientExtensionsBadRequest struct {
	Payload *models.SetOrderClientExtensionsBadRequestBody
}

func (o *SetOrderClientExtensionsBadRequest) Error() string {
	return fmt.Sprintf("[PUT /accounts/{accountID}/orders/{orderSpecifier}/clientExtensions][%d] setOrderClientExtensionsBadRequest  %+v", 400, o.Payload)
}

func (o *SetOrderClientExtensionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SetOrderClientExtensionsBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetOrderClientExtensionsUnauthorized creates a SetOrderClientExtensionsUnauthorized with default headers values
func NewSetOrderClientExtensionsUnauthorized() *SetOrderClientExtensionsUnauthorized {
	return &SetOrderClientExtensionsUnauthorized{}
}

/*SetOrderClientExtensionsUnauthorized handles this case with default header values.

Unauthorized. The endpoint being access required the client to authenticated, however the the authentication token is invalid or has not been provided.
*/
type SetOrderClientExtensionsUnauthorized struct {
	/*The unique identifier generated for the request
	 */
	RequestID string

	Payload *models.SetOrderClientExtensionsUnauthorizedBody
}

func (o *SetOrderClientExtensionsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /accounts/{accountID}/orders/{orderSpecifier}/clientExtensions][%d] setOrderClientExtensionsUnauthorized  %+v", 401, o.Payload)
}

func (o *SetOrderClientExtensionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header RequestID
	o.RequestID = response.GetHeader("RequestID")

	o.Payload = new(models.SetOrderClientExtensionsUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetOrderClientExtensionsNotFound creates a SetOrderClientExtensionsNotFound with default headers values
func NewSetOrderClientExtensionsNotFound() *SetOrderClientExtensionsNotFound {
	return &SetOrderClientExtensionsNotFound{}
}

/*SetOrderClientExtensionsNotFound handles this case with default header values.

The Account or Order specified does not exist.
*/
type SetOrderClientExtensionsNotFound struct {
	Payload *models.SetOrderClientExtensionsNotFoundBody
}

func (o *SetOrderClientExtensionsNotFound) Error() string {
	return fmt.Sprintf("[PUT /accounts/{accountID}/orders/{orderSpecifier}/clientExtensions][%d] setOrderClientExtensionsNotFound  %+v", 404, o.Payload)
}

func (o *SetOrderClientExtensionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SetOrderClientExtensionsNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetOrderClientExtensionsMethodNotAllowed creates a SetOrderClientExtensionsMethodNotAllowed with default headers values
func NewSetOrderClientExtensionsMethodNotAllowed() *SetOrderClientExtensionsMethodNotAllowed {
	return &SetOrderClientExtensionsMethodNotAllowed{}
}

/*SetOrderClientExtensionsMethodNotAllowed handles this case with default header values.

Method Not Allowed. The client has attempted to access an endpoint using an HTTP method that is not supported.
*/
type SetOrderClientExtensionsMethodNotAllowed struct {
	/*The unique identifier generated for the request
	 */
	RequestID string

	Payload *models.SetOrderClientExtensionsMethodNotAllowedBody
}

func (o *SetOrderClientExtensionsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /accounts/{accountID}/orders/{orderSpecifier}/clientExtensions][%d] setOrderClientExtensionsMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *SetOrderClientExtensionsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header RequestID
	o.RequestID = response.GetHeader("RequestID")

	o.Payload = new(models.SetOrderClientExtensionsMethodNotAllowedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
